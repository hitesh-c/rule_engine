{
  "version": 3,
  "sources": ["../node_modules/.pnpm/hash-it@6.0.0/node_modules/hash-it/src/hash.ts", "../node_modules/.pnpm/hash-it@6.0.0/node_modules/hash-it/src/constants.ts", "../node_modules/.pnpm/hash-it@6.0.0/node_modules/hash-it/src/sort.ts", "../node_modules/.pnpm/hash-it@6.0.0/node_modules/hash-it/src/utils.ts", "../node_modules/.pnpm/hash-it@6.0.0/node_modules/hash-it/src/cache.ts", "../node_modules/.pnpm/hash-it@6.0.0/node_modules/hash-it/src/stringify.ts", "../node_modules/.pnpm/hash-it@6.0.0/node_modules/hash-it/src/index.ts", "../src/fact.js", "../src/debug.js", "../src/condition.js", "../node_modules/.pnpm/clone@2.1.2/node_modules/clone/clone.js", "../src/rule-result.js", "../node_modules/.pnpm/eventemitter2@6.4.9/node_modules/eventemitter2/lib/eventemitter2.js", "../src/rule.js", "../src/errors.js", "../node_modules/.pnpm/jsonpath-plus@10.1.0/node_modules/jsonpath-plus/dist/index-node-esm.js", "../src/almanac.js", "../src/operator.js", "../src/engine-default-operators.js", "../src/operator-decorator.js", "../src/engine-default-operator-decorators.js", "../src/operator-map.js", "../src/engine.js", "../src/custom-rules-engine.js", "../src/index.js"],
  "sourcesContent": ["/**\n * based on string passed, get the integer hash value\n * through bitwise operation (based on spinoff of dbj2\n * with enhancements for reduced collisions)\n */\nexport function hash(string: string) {\n  let index = string.length;\n  let hashA = 5381;\n  let hashB = 52711;\n  let charCode;\n\n  while (index--) {\n    charCode = string.charCodeAt(index);\n\n    hashA = (hashA * 33) ^ charCode;\n    hashB = (hashB * 33) ^ charCode;\n  }\n\n  return (hashA >>> 0) * 4096 + (hashB >>> 0);\n}\n", "export const SEPARATOR = '|';\nexport const XML_ELEMENT_REGEXP = /\\[object ([HTML|SVG](.*)Element)\\]/;\n\nexport const CLASSES = {\n  '[object Arguments]': 0,\n  '[object Array]': 1,\n  '[object ArrayBuffer]': 2,\n  '[object AsyncFunction]': 3,\n  '[object AsyncGeneratorFunction]': 4,\n  '[object BigInt]': 5,\n  '[object BigInt64Array]': 6,\n  '[object BigUint64Array]': 7,\n  '[object Boolean]': 8,\n  '[object DataView]': 9,\n  '[object Date]': 10,\n  '[object DocumentFragment]': 11,\n  '[object Error]': 12,\n  '[object Event]': 13,\n  '[object Float32Array]': 14,\n  '[object Float64Array]': 15,\n  '[object Function]': 16,\n  '[object Generator]': 17,\n  '[object GeneratorFunction]': 18,\n  '[object Int8Array]': 19,\n  '[object Int16Array]': 20,\n  '[object Map]': 21,\n  '[object Number]': 22,\n  '[object Object]': 23,\n  '[object Promise]': 24,\n  '[object RegExp]': 25,\n  '[object Set]': 26,\n  '[object SharedArrayBuffer]': 27,\n  '[object String]': 28,\n  '[object Uint8Array]': 29,\n  '[object Uint8ClampedArray]': 30,\n  '[object Uint16Array]': 31,\n  '[object Uint32Array]': 32,\n  '[object WeakMap]': 33,\n  '[object WeakRef]': 34,\n  '[object WeakSet]': 35,\n  CUSTOM: 36,\n  ELEMENT: 37,\n} as const;\n\nexport type Class = keyof typeof CLASSES;\n\nexport const ARRAY_LIKE_CLASSES = {\n  '[object Arguments]': 1,\n  '[object Array]': 2,\n} as const;\n\nexport type ArrayLikeClass = keyof typeof ARRAY_LIKE_CLASSES;\n\nexport const NON_ENUMERABLE_CLASSES = {\n  '[object Generator]': 1,\n  '[object Promise]': 2,\n  '[object WeakMap]': 3,\n  '[object WeakRef]': 4,\n  '[object WeakSet]': 5,\n} as const;\n\nexport type NonEnumerableClass = keyof typeof NON_ENUMERABLE_CLASSES;\n\nexport const PRIMITIVE_WRAPPER_CLASSES = {\n  '[object AsyncFunction]': 1,\n  '[object AsyncGeneratorFunction]': 2,\n  '[object Boolean]': 3,\n  '[object Function]': 4,\n  '[object GeneratorFunction]': 5,\n  '[object Number]': 6,\n  '[object String]': 7,\n} as const;\n\nexport type PrimitiveWrapperClass = keyof typeof PRIMITIVE_WRAPPER_CLASSES;\n\nexport const TYPED_ARRAY_CLASSES = {\n  '[object BigInt64Array]': 1,\n  '[object BigUint64Array]': 2,\n  '[object Float32Array]': 3,\n  '[object Float64Array]': 4,\n  '[object Int8Array]': 5,\n  '[object Int16Array]': 6,\n  '[object Uint8Array]': 7,\n  '[object Uint8ClampedArray]': 8,\n  '[object Uint16Array]': 9,\n  '[object Uint32Array]': 10,\n} as const;\n\nexport type TypedArrayClass = keyof typeof TYPED_ARRAY_CLASSES;\n\nexport const RECURSIVE_CLASSES = {\n  '[object Arguments]': 1,\n  '[object Array]': 2,\n  '[object ArrayBuffer]': 3,\n  '[object BigInt64Array]': 4,\n  '[object BigUint64Array]': 5,\n  '[object DataView]': 6,\n  '[object Float32Array]': 7,\n  '[object Float64Array]': 8,\n  '[object Int8Array]': 9,\n  '[object Int16Array]': 10,\n  '[object Map]': 11,\n  '[object Object]': 12,\n  '[object Set]': 13,\n  '[object SharedArrayBuffer]': 14,\n  '[object Uint8Array]': 15,\n  '[object Uint8ClampedArray]': 16,\n  '[object Uint16Array]': 17,\n  '[object Uint32Array]': 18,\n  CUSTOM: 19,\n} as const;\n\nexport type RecursiveClass = keyof typeof RECURSIVE_CLASSES;\n\nexport const HASHABLE_TYPES = {\n  bigint: 'i',\n  boolean: 'b',\n  empty: 'e',\n  function: 'g',\n  number: 'n',\n  object: 'o',\n  string: 's',\n  symbol: 's',\n} as const;\n\nexport type HashableType = keyof typeof HASHABLE_TYPES;\n", "export function sortByKey(\n  first: [string, string],\n  second: [string, string],\n): boolean {\n  return first[0] > second[0];\n}\n\nexport function sortBySelf(first: string, second: string) {\n  return first > second;\n}\n\nexport function sort(\n  array: any[],\n  fn: (item: any, comparisonItem: any) => boolean,\n) {\n  let subIndex;\n  let value;\n\n  for (let index = 0; index < array.length; ++index) {\n    value = array[index];\n\n    for (\n      subIndex = index - 1;\n      ~subIndex && fn(array[subIndex], value);\n      --subIndex\n    ) {\n      array[subIndex + 1] = array[subIndex];\n    }\n\n    array[subIndex + 1] = value;\n  }\n\n  return array;\n}\n", "import { CLASSES, HASHABLE_TYPES, SEPARATOR } from './constants';\n\nimport type { Class } from './constants';\n\nexport function namespaceComplexValue(\n  classType: Class,\n  value: string | number | boolean,\n) {\n  return (\n    HASHABLE_TYPES.object + SEPARATOR + CLASSES[classType] + SEPARATOR + value\n  );\n}\n", "import { SEPARATOR } from './constants';\nimport { namespaceComplexValue } from './utils';\n\nimport type { Class } from './constants';\n\nexport const NON_ENUMERABLE_CLASS_CACHE = new WeakMap<\n  NonEnumerableObject,\n  string\n>();\n\ntype NonEnumerableObject =\n  | Generator<any, any, any>\n  | Promise<any>\n  | WeakMap<any, any>\n  | WeakSet<any>;\n\nlet refId = 0;\nexport function getUnsupportedHash(\n  value: NonEnumerableObject,\n  classType: Class,\n): string {\n  const cached = NON_ENUMERABLE_CLASS_CACHE.get(value);\n\n  if (cached) {\n    return cached;\n  }\n\n  const toCache = namespaceComplexValue(\n    classType,\n    'NOT_ENUMERABLE' + SEPARATOR + refId++,\n  );\n\n  NON_ENUMERABLE_CLASS_CACHE.set(value, toCache);\n\n  return toCache;\n}\n", "import {\n  ARRAY_LIKE_CLASSES,\n  HASHABLE_TYPES,\n  NON_ENUMERABLE_CLASSES,\n  PrimitiveWrapperClass,\n  PRIMITIVE_WRAPPER_CLASSES,\n  RECURSIVE_CLASSES,\n  SEPARATOR,\n  TYPED_ARRAY_CLASSES,\n  XML_ELEMENT_REGEXP,\n} from './constants';\nimport { sort, sortByKey, sortBySelf } from './sort';\n\nimport type {\n  ArrayLikeClass,\n  Class,\n  NonEnumerableClass,\n  RecursiveClass,\n  TypedArrayClass,\n} from './constants';\nimport { getUnsupportedHash } from './cache';\nimport { namespaceComplexValue } from './utils';\n\ninterface RecursiveState {\n  cache: WeakMap<any, number>;\n  id: number;\n}\n\nconst toString = Object.prototype.toString;\n\nfunction stringifyComplexType(\n  value: any,\n  classType: Class,\n  state: RecursiveState,\n) {\n  if (RECURSIVE_CLASSES[classType as RecursiveClass]) {\n    return stringifyRecursiveAsJson(classType as RecursiveClass, value, state);\n  }\n\n  if (classType === '[object Date]') {\n    return namespaceComplexValue(classType, value.getTime());\n  }\n\n  if (classType === '[object RegExp]') {\n    return namespaceComplexValue(classType, value.toString());\n  }\n\n  if (classType === '[object Event]') {\n    return namespaceComplexValue(\n      classType,\n      [\n        value.bubbles,\n        value.cancelBubble,\n        value.cancelable,\n        value.composed,\n        value.currentTarget,\n        value.defaultPrevented,\n        value.eventPhase,\n        value.isTrusted,\n        value.returnValue,\n        value.target,\n        value.type,\n      ].join(),\n    );\n  }\n\n  if (classType === '[object Error]') {\n    return namespaceComplexValue(\n      classType,\n      value.message + SEPARATOR + value.stack,\n    );\n  }\n\n  if (classType === '[object DocumentFragment]') {\n    return namespaceComplexValue(classType, stringifyDocumentFragment(value));\n  }\n\n  const element = classType.match(XML_ELEMENT_REGEXP);\n\n  if (element) {\n    return namespaceComplexValue(\n      'ELEMENT',\n      element[1] + SEPARATOR + value.outerHTML,\n    );\n  }\n\n  if (NON_ENUMERABLE_CLASSES[classType as NonEnumerableClass]) {\n    return getUnsupportedHash(value, classType);\n  }\n\n  if (PRIMITIVE_WRAPPER_CLASSES[classType as PrimitiveWrapperClass]) {\n    return namespaceComplexValue(classType, value.toString());\n  }\n\n  // This would only be hit with custom `toStringTag` values\n  return stringifyRecursiveAsJson('CUSTOM', value, state);\n}\n\nfunction stringifyRecursiveAsJson(\n  classType: RecursiveClass,\n  value: any,\n  state: RecursiveState,\n) {\n  const cached = state.cache.get(value);\n\n  if (cached) {\n    return namespaceComplexValue(classType, 'RECURSIVE~' + cached);\n  }\n\n  state.cache.set(value, ++state.id);\n\n  if (classType === '[object Object]') {\n    return value[Symbol.iterator]\n      ? getUnsupportedHash(value, classType)\n      : namespaceComplexValue(classType, stringifyObject(value, state));\n  }\n\n  if (ARRAY_LIKE_CLASSES[classType as ArrayLikeClass]) {\n    return namespaceComplexValue(classType, stringifyArray(value, state));\n  }\n\n  if (classType === '[object Map]') {\n    return namespaceComplexValue(classType, stringifyMap(value, state));\n  }\n\n  if (classType === '[object Set]') {\n    return namespaceComplexValue(classType, stringifySet(value, state));\n  }\n\n  if (TYPED_ARRAY_CLASSES[classType as TypedArrayClass]) {\n    return namespaceComplexValue(classType, value.join());\n  }\n\n  if (classType === '[object ArrayBuffer]') {\n    return namespaceComplexValue(classType, stringifyArrayBuffer(value));\n  }\n\n  if (classType === '[object DataView]') {\n    return namespaceComplexValue(classType, stringifyArrayBuffer(value.buffer));\n  }\n\n  if (NON_ENUMERABLE_CLASSES[classType as NonEnumerableClass]) {\n    return getUnsupportedHash(value, classType);\n  }\n\n  return namespaceComplexValue('CUSTOM', stringifyObject(value, state));\n}\n\nexport function stringifyArray(value: any[], state: RecursiveState) {\n  let index = value.length;\n\n  const result: string[] = new Array(index);\n\n  while (--index >= 0) {\n    result[index] = stringify(value[index], state);\n  }\n\n  return result.join();\n}\n\nexport function stringifyArrayBufferModern(buffer: ArrayBufferLike): string {\n  return Buffer.from(buffer).toString('utf8');\n}\n\nexport function stringifyArrayBufferFallback(buffer: ArrayBufferLike): string {\n  return String.fromCharCode.apply(\n    null,\n    new Uint16Array(buffer) as unknown as number[],\n  );\n}\n\nexport function stringifyArrayBufferNone(): string {\n  return 'UNSUPPORTED';\n}\n\nexport function stringifyDocumentFragment(fragment: DocumentFragment): string {\n  const children = fragment.children;\n\n  let index = children.length;\n\n  const innerHTML: string[] = new Array(index);\n\n  while (--index >= 0) {\n    innerHTML[index] = children[index]!.outerHTML;\n  }\n\n  return innerHTML.join();\n}\n\nconst stringifyArrayBuffer =\n  typeof Buffer !== 'undefined' && typeof Buffer.from === 'function'\n    ? stringifyArrayBufferModern\n    : typeof Uint16Array === 'function'\n    ? stringifyArrayBufferFallback\n    : stringifyArrayBufferNone;\n\nexport function stringifyMap(map: Map<any, any>, state: RecursiveState) {\n  const result: string[] | Array<[string, string]> = new Array(map.size);\n\n  let index = 0;\n  map.forEach((value, key) => {\n    result[index++] = [stringify(key, state), stringify(value, state)];\n  });\n\n  sort(result, sortByKey);\n\n  while (--index >= 0) {\n    result[index] = '[' + result[index]![0] + ',' + result[index]![1] + ']';\n  }\n\n  return '[' + result.join() + ']';\n}\n\nexport function stringifyObject(\n  value: Record<string, any>,\n  state: RecursiveState,\n) {\n  const properties = sort(Object.getOwnPropertyNames(value), sortBySelf);\n  const length = properties.length;\n  const result: string[] = new Array(length);\n\n  let index = length;\n\n  while (--index >= 0) {\n    result[index] =\n      properties[index]! + ':' + stringify(value[properties[index]!], state);\n  }\n\n  return '{' + result.join() + '}';\n}\n\nexport function stringifySet(set: Set<any>, state: RecursiveState) {\n  const result: string[] = new Array(set.size);\n\n  let index = 0;\n  set.forEach((value) => {\n    result[index++] = stringify(value, state);\n  });\n\n  return '[' + sort(result, sortBySelf).join() + ']';\n}\n\nexport function stringify(\n  value: any,\n  state: RecursiveState | undefined,\n): string {\n  const type = typeof value;\n\n  if (value == null || type === 'undefined') {\n    return HASHABLE_TYPES.empty + value;\n  }\n\n  if (type === 'object') {\n    return stringifyComplexType(\n      value,\n      toString.call(value) as unknown as Class,\n      state || { cache: new WeakMap(), id: 1 },\n    );\n  }\n\n  if (type === 'function' || type === 'symbol') {\n    return HASHABLE_TYPES[type] + value.toString();\n  }\n\n  if (type === 'boolean') {\n    return HASHABLE_TYPES.boolean + +value;\n  }\n\n  return HASHABLE_TYPES[type] + value;\n}\n", "import { hash } from './hash';\nimport { stringify } from './stringify';\n\nexport default function hashIt<Value>(value: Value): number {\n  return hash(stringify(value, undefined));\n}\n", "'use strict'\n\nimport hash from 'hash-it'\n\nclass Fact {\n  /**\n   * Returns a new fact instance\n   * @param  {string} id - fact unique identifer\n   * @param  {object} options\n   * @param  {boolean} options.cache - whether to cache the fact's value for future rules\n   * @param  {primitive|function} valueOrMethod - constant primitive, or method to call when computing the fact's value\n   * @return {Fact}\n   */\n  constructor (id, valueOrMethod, options) {\n    this.id = id\n    const defaultOptions = { cache: true }\n    if (typeof options === 'undefined') {\n      options = defaultOptions\n    }\n    if (typeof valueOrMethod !== 'function') {\n      this.value = valueOrMethod\n      this.type = this.constructor.CONSTANT\n    } else {\n      this.calculationMethod = valueOrMethod\n      this.type = this.constructor.DYNAMIC\n    }\n\n    if (!this.id) throw new Error('factId required')\n\n    this.priority = parseInt(options.priority || 1, 10)\n    this.options = Object.assign({}, defaultOptions, options)\n    this.cacheKeyMethod = this.defaultCacheKeys\n    return this\n  }\n\n  isConstant () {\n    return this.type === this.constructor.CONSTANT\n  }\n\n  isDynamic () {\n    return this.type === this.constructor.DYNAMIC\n  }\n\n  /**\n   * Return the fact value, based on provided parameters\n   * @param  {object} params\n   * @param  {Almanac} almanac\n   * @return {any} calculation method results\n   */\n  calculate (params, almanac) {\n    // if constant fact w/set value, return immediately\n    if (Object.prototype.hasOwnProperty.call(this, 'value')) {\n      return this.value\n    }\n    return this.calculationMethod(params, almanac)\n  }\n\n  /**\n   * Return a cache key (MD5 string) based on parameters\n   * @param  {object} obj - properties to generate a hash key from\n   * @return {string} MD5 string based on the hash'd object\n   */\n  static hashFromObject (obj) {\n    return hash(obj)\n  }\n\n  /**\n   * Default properties to use when caching a fact\n   * Assumes every fact is a pure function, whose computed value will only\n   * change when input params are modified\n   * @param  {string} id - fact unique identifer\n   * @param  {object} params - parameters passed to fact calcution method\n   * @return {object} id + params\n   */\n  defaultCacheKeys (id, params) {\n    return { params, id }\n  }\n\n  /**\n   * Generates the fact's cache key(MD5 string)\n   * Returns nothing if the fact's caching has been disabled\n   * @param  {object} params - parameters that would be passed to the computation method\n   * @return {string} cache key\n   */\n  getCacheKey (params) {\n    if (this.options.cache === true) {\n      const cacheProperties = this.cacheKeyMethod(this.id, params)\n      const hash = Fact.hashFromObject(cacheProperties)\n      return hash\n    }\n  }\n}\n\nFact.CONSTANT = 'CONSTANT'\nFact.DYNAMIC = 'DYNAMIC'\n\nexport default Fact\n", "\nfunction createDebug () {\n  try {\n    if ((typeof process !== 'undefined' && process.env && process.env.DEBUG && process.env.DEBUG.match(/json-rules-engine/)) ||\n        (typeof window !== 'undefined' && window.localStorage && window.localStorage.debug && window.localStorage.debug.match(/json-rules-engine/))) {\n      return console.debug.bind(console)\n    }\n  } catch (ex) {\n    // Do nothing\n  }\n  return () => {}\n}\n\nexport default createDebug()\n", "'use strict'\n\nimport debug from './debug'\n\nexport default class Condition {\n  constructor (properties) {\n    if (!properties) throw new Error('Condition: constructor options required')\n    const booleanOperator = Condition.booleanOperator(properties)\n    Object.assign(this, properties)\n    if (booleanOperator) {\n      const subConditions = properties[booleanOperator]\n      const subConditionsIsArray = Array.isArray(subConditions)\n      if (booleanOperator !== 'not' && !subConditionsIsArray) { throw new Error(`\"${booleanOperator}\" must be an array`) }\n      if (booleanOperator === 'not' && subConditionsIsArray) { throw new Error(`\"${booleanOperator}\" cannot be an array`) }\n      this.operator = booleanOperator\n      // boolean conditions always have a priority; default 1\n      this.priority = parseInt(properties.priority, 10) || 1\n      if (subConditionsIsArray) {\n        this[booleanOperator] = subConditions.map((c) => new Condition(c))\n      } else {\n        this[booleanOperator] = new Condition(subConditions)\n      }\n    } else if (!Object.prototype.hasOwnProperty.call(properties, 'condition')) {\n      if (!Object.prototype.hasOwnProperty.call(properties, 'fact')) { throw new Error('Condition: constructor \"fact\" property required') }\n      if (!Object.prototype.hasOwnProperty.call(properties, 'operator')) { throw new Error('Condition: constructor \"operator\" property required') }\n      if (!Object.prototype.hasOwnProperty.call(properties, 'value')) { throw new Error('Condition: constructor \"value\" property required') }\n\n      // a non-boolean condition does not have a priority by default. this allows\n      // priority to be dictated by the fact definition\n      if (Object.prototype.hasOwnProperty.call(properties, 'priority')) {\n        properties.priority = parseInt(properties.priority, 10)\n      }\n    }\n  }\n\n  /**\n   * Converts the condition into a json-friendly structure\n   * @param   {Boolean} stringify - whether to return as a json string\n   * @returns {string,object} json string or json-friendly object\n   */\n  toJSON (stringify = true) {\n    const props = {}\n    if (this.priority) {\n      props.priority = this.priority\n    }\n    if (this.name) {\n      props.name = this.name\n    }\n    const oper = Condition.booleanOperator(this)\n    if (oper) {\n      if (Array.isArray(this[oper])) {\n        props[oper] = this[oper].map((c) => c.toJSON(false))\n      } else {\n        props[oper] = this[oper].toJSON(false)\n      }\n    } else if (this.isConditionReference()) {\n      props.condition = this.condition\n    } else {\n      props.operator = this.operator\n      props.value = this.value\n      props.fact = this.fact\n      if (this.factResult !== undefined) {\n        props.factResult = this.factResult\n      }\n      if (this.result !== undefined) {\n        props.result = this.result\n      }\n      if (this.params) {\n        props.params = this.params\n      }\n      if (this.path) {\n        props.path = this.path\n      }\n    }\n    if (stringify) {\n      return JSON.stringify(props)\n    }\n    return props\n  }\n\n  /**\n   * Takes the fact result and compares it to the condition 'value', using the operator\n   *   LHS                      OPER       RHS\n   * <fact + params + path>  <operator>  <value>\n   *\n   * @param   {Almanac} almanac\n   * @param   {Map} operatorMap - map of available operators, keyed by operator name\n   * @returns {Boolean} - evaluation result\n   */\n  evaluate (almanac, operatorMap) {\n    if (!almanac) return Promise.reject(new Error('almanac required'))\n    if (!operatorMap) return Promise.reject(new Error('operatorMap required'))\n    if (this.isBooleanOperator()) { return Promise.reject(new Error('Cannot evaluate() a boolean condition')) }\n\n    const op = operatorMap.get(this.operator)\n    if (!op) { return Promise.reject(new Error(`Unknown operator: ${this.operator}`)) }\n\n    return Promise.all([\n      almanac.getValue(this.value),\n      almanac.factValue(this.fact, this.params, this.path)\n    ]).then(([rightHandSideValue, leftHandSideValue]) => {\n      const result = op.evaluate(leftHandSideValue, rightHandSideValue)\n      debug(\n        'condition::evaluate', {\n          leftHandSideValue,\n          operator: this.operator,\n          rightHandSideValue,\n          result\n        }\n      )\n      return {\n        result,\n        leftHandSideValue,\n        rightHandSideValue,\n        operator: this.operator\n      }\n    })\n  }\n\n  /**\n   * Returns the boolean operator for the condition\n   * If the condition is not a boolean condition, the result will be 'undefined'\n   * @return {string 'all', 'any', or 'not'}\n   */\n  static booleanOperator (condition) {\n    if (Object.prototype.hasOwnProperty.call(condition, 'any')) {\n      return 'any'\n    } else if (Object.prototype.hasOwnProperty.call(condition, 'all')) {\n      return 'all'\n    } else if (Object.prototype.hasOwnProperty.call(condition, 'not')) {\n      return 'not'\n    }\n  }\n\n  /**\n   * Returns the condition's boolean operator\n   * Instance version of Condition.isBooleanOperator\n   * @returns {string,undefined} - 'any', 'all', 'not' or undefined (if not a boolean condition)\n   */\n  booleanOperator () {\n    return Condition.booleanOperator(this)\n  }\n\n  /**\n   * Whether the operator is boolean ('all', 'any', 'not')\n   * @returns {Boolean}\n   */\n  isBooleanOperator () {\n    return Condition.booleanOperator(this) !== undefined\n  }\n\n  /**\n   * Whether the condition represents a reference to a condition\n   * @returns {Boolean}\n   */\n  isConditionReference () {\n    return Object.prototype.hasOwnProperty.call(this, 'condition')\n  }\n}\n", "var clone = (function() {\n'use strict';\n\nfunction _instanceof(obj, type) {\n  return type != null && obj instanceof type;\n}\n\nvar nativeMap;\ntry {\n  nativeMap = Map;\n} catch(_) {\n  // maybe a reference error because no `Map`. Give it a dummy value that no\n  // value will ever be an instanceof.\n  nativeMap = function() {};\n}\n\nvar nativeSet;\ntry {\n  nativeSet = Set;\n} catch(_) {\n  nativeSet = function() {};\n}\n\nvar nativePromise;\ntry {\n  nativePromise = Promise;\n} catch(_) {\n  nativePromise = function() {};\n}\n\n/**\n * Clones (copies) an Object using deep copying.\n *\n * This function supports circular references by default, but if you are certain\n * there are no circular references in your object, you can save some CPU time\n * by calling clone(obj, false).\n *\n * Caution: if `circular` is false and `parent` contains circular references,\n * your program may enter an infinite loop and crash.\n *\n * @param `parent` - the object to be cloned\n * @param `circular` - set to true if the object to be cloned may contain\n *    circular references. (optional - true by default)\n * @param `depth` - set to a number if the object is only to be cloned to\n *    a particular depth. (optional - defaults to Infinity)\n * @param `prototype` - sets the prototype to be used when cloning an object.\n *    (optional - defaults to parent prototype).\n * @param `includeNonEnumerable` - set to true if the non-enumerable properties\n *    should be cloned as well. Non-enumerable properties on the prototype\n *    chain will be ignored. (optional - false by default)\n*/\nfunction clone(parent, circular, depth, prototype, includeNonEnumerable) {\n  if (typeof circular === 'object') {\n    depth = circular.depth;\n    prototype = circular.prototype;\n    includeNonEnumerable = circular.includeNonEnumerable;\n    circular = circular.circular;\n  }\n  // maintain two arrays for circular references, where corresponding parents\n  // and children have the same index\n  var allParents = [];\n  var allChildren = [];\n\n  var useBuffer = typeof Buffer != 'undefined';\n\n  if (typeof circular == 'undefined')\n    circular = true;\n\n  if (typeof depth == 'undefined')\n    depth = Infinity;\n\n  // recurse this function so we don't reset allParents and allChildren\n  function _clone(parent, depth) {\n    // cloning null always returns null\n    if (parent === null)\n      return null;\n\n    if (depth === 0)\n      return parent;\n\n    var child;\n    var proto;\n    if (typeof parent != 'object') {\n      return parent;\n    }\n\n    if (_instanceof(parent, nativeMap)) {\n      child = new nativeMap();\n    } else if (_instanceof(parent, nativeSet)) {\n      child = new nativeSet();\n    } else if (_instanceof(parent, nativePromise)) {\n      child = new nativePromise(function (resolve, reject) {\n        parent.then(function(value) {\n          resolve(_clone(value, depth - 1));\n        }, function(err) {\n          reject(_clone(err, depth - 1));\n        });\n      });\n    } else if (clone.__isArray(parent)) {\n      child = [];\n    } else if (clone.__isRegExp(parent)) {\n      child = new RegExp(parent.source, __getRegExpFlags(parent));\n      if (parent.lastIndex) child.lastIndex = parent.lastIndex;\n    } else if (clone.__isDate(parent)) {\n      child = new Date(parent.getTime());\n    } else if (useBuffer && Buffer.isBuffer(parent)) {\n      if (Buffer.allocUnsafe) {\n        // Node.js >= 4.5.0\n        child = Buffer.allocUnsafe(parent.length);\n      } else {\n        // Older Node.js versions\n        child = new Buffer(parent.length);\n      }\n      parent.copy(child);\n      return child;\n    } else if (_instanceof(parent, Error)) {\n      child = Object.create(parent);\n    } else {\n      if (typeof prototype == 'undefined') {\n        proto = Object.getPrototypeOf(parent);\n        child = Object.create(proto);\n      }\n      else {\n        child = Object.create(prototype);\n        proto = prototype;\n      }\n    }\n\n    if (circular) {\n      var index = allParents.indexOf(parent);\n\n      if (index != -1) {\n        return allChildren[index];\n      }\n      allParents.push(parent);\n      allChildren.push(child);\n    }\n\n    if (_instanceof(parent, nativeMap)) {\n      parent.forEach(function(value, key) {\n        var keyChild = _clone(key, depth - 1);\n        var valueChild = _clone(value, depth - 1);\n        child.set(keyChild, valueChild);\n      });\n    }\n    if (_instanceof(parent, nativeSet)) {\n      parent.forEach(function(value) {\n        var entryChild = _clone(value, depth - 1);\n        child.add(entryChild);\n      });\n    }\n\n    for (var i in parent) {\n      var attrs;\n      if (proto) {\n        attrs = Object.getOwnPropertyDescriptor(proto, i);\n      }\n\n      if (attrs && attrs.set == null) {\n        continue;\n      }\n      child[i] = _clone(parent[i], depth - 1);\n    }\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(parent);\n      for (var i = 0; i < symbols.length; i++) {\n        // Don't need to worry about cloning a symbol because it is a primitive,\n        // like a number or string.\n        var symbol = symbols[i];\n        var descriptor = Object.getOwnPropertyDescriptor(parent, symbol);\n        if (descriptor && !descriptor.enumerable && !includeNonEnumerable) {\n          continue;\n        }\n        child[symbol] = _clone(parent[symbol], depth - 1);\n        if (!descriptor.enumerable) {\n          Object.defineProperty(child, symbol, {\n            enumerable: false\n          });\n        }\n      }\n    }\n\n    if (includeNonEnumerable) {\n      var allPropertyNames = Object.getOwnPropertyNames(parent);\n      for (var i = 0; i < allPropertyNames.length; i++) {\n        var propertyName = allPropertyNames[i];\n        var descriptor = Object.getOwnPropertyDescriptor(parent, propertyName);\n        if (descriptor && descriptor.enumerable) {\n          continue;\n        }\n        child[propertyName] = _clone(parent[propertyName], depth - 1);\n        Object.defineProperty(child, propertyName, {\n          enumerable: false\n        });\n      }\n    }\n\n    return child;\n  }\n\n  return _clone(parent, depth);\n}\n\n/**\n * Simple flat clone using prototype, accepts only objects, usefull for property\n * override on FLAT configuration object (no nested props).\n *\n * USE WITH CAUTION! This may not behave as you wish if you do not know how this\n * works.\n */\nclone.clonePrototype = function clonePrototype(parent) {\n  if (parent === null)\n    return null;\n\n  var c = function () {};\n  c.prototype = parent;\n  return new c();\n};\n\n// private utility functions\n\nfunction __objToStr(o) {\n  return Object.prototype.toString.call(o);\n}\nclone.__objToStr = __objToStr;\n\nfunction __isDate(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Date]';\n}\nclone.__isDate = __isDate;\n\nfunction __isArray(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Array]';\n}\nclone.__isArray = __isArray;\n\nfunction __isRegExp(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';\n}\nclone.__isRegExp = __isRegExp;\n\nfunction __getRegExpFlags(re) {\n  var flags = '';\n  if (re.global) flags += 'g';\n  if (re.ignoreCase) flags += 'i';\n  if (re.multiline) flags += 'm';\n  return flags;\n}\nclone.__getRegExpFlags = __getRegExpFlags;\n\nreturn clone;\n})();\n\nif (typeof module === 'object' && module.exports) {\n  module.exports = clone;\n}\n", "'use strict'\n\nimport deepClone from 'clone'\n\nexport default class RuleResult {\n  constructor (conditions, event, priority, name) {\n    this.conditions = deepClone(conditions)\n    this.event = deepClone(event)\n    this.priority = deepClone(priority)\n    this.name = deepClone(name)\n    this.result = null\n  }\n\n  setResult (result) {\n    this.result = result\n  }\n\n  resolveEventParams (almanac) {\n    if (this.event.params !== null && typeof this.event.params === 'object') {\n      const updates = []\n      for (const key in this.event.params) {\n        if (Object.prototype.hasOwnProperty.call(this.event.params, key)) {\n          updates.push(\n            almanac\n              .getValue(this.event.params[key])\n              .then((val) => (this.event.params[key] = val))\n          )\n        }\n      }\n      return Promise.all(updates)\n    }\n    return Promise.resolve()\n  }\n\n  toJSON (stringify = true) {\n    const props = {\n      conditions: this.conditions.toJSON(false),\n      event: this.event,\n      priority: this.priority,\n      name: this.name,\n      result: this.result\n    }\n    if (stringify) {\n      return JSON.stringify(props)\n    }\n    return props\n  }\n}\n", "/*!\n * EventEmitter2\n * https://github.com/hij1nx/EventEmitter2\n *\n * Copyright (c) 2013 hij1nx\n * Licensed under the MIT license.\n */\n;!function(undefined) {\n  var hasOwnProperty= Object.hasOwnProperty;\n  var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\n    return Object.prototype.toString.call(obj) === \"[object Array]\";\n  };\n  var defaultMaxListeners = 10;\n  var nextTickSupported= typeof process=='object' && typeof process.nextTick=='function';\n  var symbolsSupported= typeof Symbol==='function';\n  var reflectSupported= typeof Reflect === 'object';\n  var setImmediateSupported= typeof setImmediate === 'function';\n  var _setImmediate= setImmediateSupported ? setImmediate : setTimeout;\n  var ownKeys= symbolsSupported? (reflectSupported && typeof Reflect.ownKeys==='function'? Reflect.ownKeys : function(obj){\n    var arr= Object.getOwnPropertyNames(obj);\n    arr.push.apply(arr, Object.getOwnPropertySymbols(obj));\n    return arr;\n  }) : Object.keys;\n\n  function init() {\n    this._events = {};\n    if (this._conf) {\n      configure.call(this, this._conf);\n    }\n  }\n\n  function configure(conf) {\n    if (conf) {\n      this._conf = conf;\n\n      conf.delimiter && (this.delimiter = conf.delimiter);\n\n      if(conf.maxListeners!==undefined){\n          this._maxListeners= conf.maxListeners;\n      }\n\n      conf.wildcard && (this.wildcard = conf.wildcard);\n      conf.newListener && (this._newListener = conf.newListener);\n      conf.removeListener && (this._removeListener = conf.removeListener);\n      conf.verboseMemoryLeak && (this.verboseMemoryLeak = conf.verboseMemoryLeak);\n      conf.ignoreErrors && (this.ignoreErrors = conf.ignoreErrors);\n\n      if (this.wildcard) {\n        this.listenerTree = {};\n      }\n    }\n  }\n\n  function logPossibleMemoryLeak(count, eventName) {\n    var errorMsg = '(node) warning: possible EventEmitter memory ' +\n        'leak detected. ' + count + ' listeners added. ' +\n        'Use emitter.setMaxListeners() to increase limit.';\n\n    if(this.verboseMemoryLeak){\n      errorMsg += ' Event name: ' + eventName + '.';\n    }\n\n    if(typeof process !== 'undefined' && process.emitWarning){\n      var e = new Error(errorMsg);\n      e.name = 'MaxListenersExceededWarning';\n      e.emitter = this;\n      e.count = count;\n      process.emitWarning(e);\n    } else {\n      console.error(errorMsg);\n\n      if (console.trace){\n        console.trace();\n      }\n    }\n  }\n\n  var toArray = function (a, b, c) {\n    var n = arguments.length;\n    switch (n) {\n      case 0:\n        return [];\n      case 1:\n        return [a];\n      case 2:\n        return [a, b];\n      case 3:\n        return [a, b, c];\n      default:\n        var arr = new Array(n);\n        while (n--) {\n          arr[n] = arguments[n];\n        }\n        return arr;\n    }\n  };\n\n  function toObject(keys, values) {\n    var obj = {};\n    var key;\n    var len = keys.length;\n    var valuesCount = values ? values.length : 0;\n    for (var i = 0; i < len; i++) {\n      key = keys[i];\n      obj[key] = i < valuesCount ? values[i] : undefined;\n    }\n    return obj;\n  }\n\n  function TargetObserver(emitter, target, options) {\n    this._emitter = emitter;\n    this._target = target;\n    this._listeners = {};\n    this._listenersCount = 0;\n\n    var on, off;\n\n    if (options.on || options.off) {\n      on = options.on;\n      off = options.off;\n    }\n\n    if (target.addEventListener) {\n      on = target.addEventListener;\n      off = target.removeEventListener;\n    } else if (target.addListener) {\n      on = target.addListener;\n      off = target.removeListener;\n    } else if (target.on) {\n      on = target.on;\n      off = target.off;\n    }\n\n    if (!on && !off) {\n      throw Error('target does not implement any known event API');\n    }\n\n    if (typeof on !== 'function') {\n      throw TypeError('on method must be a function');\n    }\n\n    if (typeof off !== 'function') {\n      throw TypeError('off method must be a function');\n    }\n\n    this._on = on;\n    this._off = off;\n\n    var _observers= emitter._observers;\n    if(_observers){\n      _observers.push(this);\n    }else{\n      emitter._observers= [this];\n    }\n  }\n\n  Object.assign(TargetObserver.prototype, {\n    subscribe: function(event, localEvent, reducer){\n      var observer= this;\n      var target= this._target;\n      var emitter= this._emitter;\n      var listeners= this._listeners;\n      var handler= function(){\n        var args= toArray.apply(null, arguments);\n        var eventObj= {\n          data: args,\n          name: localEvent,\n          original: event\n        };\n        if(reducer){\n          var result= reducer.call(target, eventObj);\n          if(result!==false){\n            emitter.emit.apply(emitter, [eventObj.name].concat(args))\n          }\n          return;\n        }\n        emitter.emit.apply(emitter, [localEvent].concat(args));\n      };\n\n\n      if(listeners[event]){\n        throw Error('Event \\'' + event + '\\' is already listening');\n      }\n\n      this._listenersCount++;\n\n      if(emitter._newListener && emitter._removeListener && !observer._onNewListener){\n\n        this._onNewListener = function (_event) {\n          if (_event === localEvent && listeners[event] === null) {\n            listeners[event] = handler;\n            observer._on.call(target, event, handler);\n          }\n        };\n\n        emitter.on('newListener', this._onNewListener);\n\n        this._onRemoveListener= function(_event){\n          if(_event === localEvent && !emitter.hasListeners(_event) && listeners[event]){\n            listeners[event]= null;\n            observer._off.call(target, event, handler);\n          }\n        };\n\n        listeners[event]= null;\n\n        emitter.on('removeListener', this._onRemoveListener);\n      }else{\n        listeners[event]= handler;\n        observer._on.call(target, event, handler);\n      }\n    },\n\n    unsubscribe: function(event){\n      var observer= this;\n      var listeners= this._listeners;\n      var emitter= this._emitter;\n      var handler;\n      var events;\n      var off= this._off;\n      var target= this._target;\n      var i;\n\n      if(event && typeof event!=='string'){\n        throw TypeError('event must be a string');\n      }\n\n      function clearRefs(){\n        if(observer._onNewListener){\n          emitter.off('newListener', observer._onNewListener);\n          emitter.off('removeListener', observer._onRemoveListener);\n          observer._onNewListener= null;\n          observer._onRemoveListener= null;\n        }\n        var index= findTargetIndex.call(emitter, observer);\n        emitter._observers.splice(index, 1);\n      }\n\n      if(event){\n        handler= listeners[event];\n        if(!handler) return;\n        off.call(target, event, handler);\n        delete listeners[event];\n        if(!--this._listenersCount){\n          clearRefs();\n        }\n      }else{\n        events= ownKeys(listeners);\n        i= events.length;\n        while(i-->0){\n          event= events[i];\n          off.call(target, event, listeners[event]);\n        }\n        this._listeners= {};\n        this._listenersCount= 0;\n        clearRefs();\n      }\n    }\n  });\n\n  function resolveOptions(options, schema, reducers, allowUnknown) {\n    var computedOptions = Object.assign({}, schema);\n\n    if (!options) return computedOptions;\n\n    if (typeof options !== 'object') {\n      throw TypeError('options must be an object')\n    }\n\n    var keys = Object.keys(options);\n    var length = keys.length;\n    var option, value;\n    var reducer;\n\n    function reject(reason) {\n      throw Error('Invalid \"' + option + '\" option value' + (reason ? '. Reason: ' + reason : ''))\n    }\n\n    for (var i = 0; i < length; i++) {\n      option = keys[i];\n      if (!allowUnknown && !hasOwnProperty.call(schema, option)) {\n        throw Error('Unknown \"' + option + '\" option');\n      }\n      value = options[option];\n      if (value !== undefined) {\n        reducer = reducers[option];\n        computedOptions[option] = reducer ? reducer(value, reject) : value;\n      }\n    }\n    return computedOptions;\n  }\n\n  function constructorReducer(value, reject) {\n    if (typeof value !== 'function' || !value.hasOwnProperty('prototype')) {\n      reject('value must be a constructor');\n    }\n    return value;\n  }\n\n  function makeTypeReducer(types) {\n    var message= 'value must be type of ' + types.join('|');\n    var len= types.length;\n    var firstType= types[0];\n    var secondType= types[1];\n\n    if (len === 1) {\n      return function (v, reject) {\n        if (typeof v === firstType) {\n          return v;\n        }\n        reject(message);\n      }\n    }\n\n    if (len === 2) {\n      return function (v, reject) {\n        var kind= typeof v;\n        if (kind === firstType || kind === secondType) return v;\n        reject(message);\n      }\n    }\n\n    return function (v, reject) {\n      var kind = typeof v;\n      var i = len;\n      while (i-- > 0) {\n        if (kind === types[i]) return v;\n      }\n      reject(message);\n    }\n  }\n\n  var functionReducer= makeTypeReducer(['function']);\n\n  var objectFunctionReducer= makeTypeReducer(['object', 'function']);\n\n  function makeCancelablePromise(Promise, executor, options) {\n    var isCancelable;\n    var callbacks;\n    var timer= 0;\n    var subscriptionClosed;\n\n    var promise = new Promise(function (resolve, reject, onCancel) {\n      options= resolveOptions(options, {\n        timeout: 0,\n        overload: false\n      }, {\n        timeout: function(value, reject){\n          value*= 1;\n          if (typeof value !== 'number' || value < 0 || !Number.isFinite(value)) {\n            reject('timeout must be a positive number');\n          }\n          return value;\n        }\n      });\n\n      isCancelable = !options.overload && typeof Promise.prototype.cancel === 'function' && typeof onCancel === 'function';\n\n      function cleanup() {\n        if (callbacks) {\n          callbacks = null;\n        }\n        if (timer) {\n          clearTimeout(timer);\n          timer = 0;\n        }\n      }\n\n      var _resolve= function(value){\n        cleanup();\n        resolve(value);\n      };\n\n      var _reject= function(err){\n        cleanup();\n        reject(err);\n      };\n\n      if (isCancelable) {\n        executor(_resolve, _reject, onCancel);\n      } else {\n        callbacks = [function(reason){\n          _reject(reason || Error('canceled'));\n        }];\n        executor(_resolve, _reject, function (cb) {\n          if (subscriptionClosed) {\n            throw Error('Unable to subscribe on cancel event asynchronously')\n          }\n          if (typeof cb !== 'function') {\n            throw TypeError('onCancel callback must be a function');\n          }\n          callbacks.push(cb);\n        });\n        subscriptionClosed= true;\n      }\n\n      if (options.timeout > 0) {\n        timer= setTimeout(function(){\n          var reason= Error('timeout');\n          reason.code = 'ETIMEDOUT'\n          timer= 0;\n          promise.cancel(reason);\n          reject(reason);\n        }, options.timeout);\n      }\n    });\n\n    if (!isCancelable) {\n      promise.cancel = function (reason) {\n        if (!callbacks) {\n          return;\n        }\n        var length = callbacks.length;\n        for (var i = 1; i < length; i++) {\n          callbacks[i](reason);\n        }\n        // internal callback to reject the promise\n        callbacks[0](reason);\n        callbacks = null;\n      };\n    }\n\n    return promise;\n  }\n\n  function findTargetIndex(observer) {\n    var observers = this._observers;\n    if(!observers){\n      return -1;\n    }\n    var len = observers.length;\n    for (var i = 0; i < len; i++) {\n      if (observers[i]._target === observer) return i;\n    }\n    return -1;\n  }\n\n  // Attention, function return type now is array, always !\n  // It has zero elements if no any matches found and one or more\n  // elements (leafs) if there are matches\n  //\n  function searchListenerTree(handlers, type, tree, i, typeLength) {\n    if (!tree) {\n      return null;\n    }\n\n    if (i === 0) {\n      var kind = typeof type;\n      if (kind === 'string') {\n        var ns, n, l = 0, j = 0, delimiter = this.delimiter, dl = delimiter.length;\n        if ((n = type.indexOf(delimiter)) !== -1) {\n          ns = new Array(5);\n          do {\n            ns[l++] = type.slice(j, n);\n            j = n + dl;\n          } while ((n = type.indexOf(delimiter, j)) !== -1);\n\n          ns[l++] = type.slice(j);\n          type = ns;\n          typeLength = l;\n        } else {\n          type = [type];\n          typeLength = 1;\n        }\n      } else if (kind === 'object') {\n        typeLength = type.length;\n      } else {\n        type = [type];\n        typeLength = 1;\n      }\n    }\n\n    var listeners= null, branch, xTree, xxTree, isolatedBranch, endReached, currentType = type[i],\n        nextType = type[i + 1], branches, _listeners;\n\n    if (i === typeLength) {\n      //\n      // If at the end of the event(s) list and the tree has listeners\n      // invoke those listeners.\n      //\n\n      if(tree._listeners) {\n        if (typeof tree._listeners === 'function') {\n          handlers && handlers.push(tree._listeners);\n          listeners = [tree];\n        } else {\n          handlers && handlers.push.apply(handlers, tree._listeners);\n          listeners = [tree];\n        }\n      }\n    } else {\n\n      if (currentType === '*') {\n        //\n        // If the event emitted is '*' at this part\n        // or there is a concrete match at this patch\n        //\n        branches = ownKeys(tree);\n        n = branches.length;\n        while (n-- > 0) {\n          branch = branches[n];\n          if (branch !== '_listeners') {\n            _listeners = searchListenerTree(handlers, type, tree[branch], i + 1, typeLength);\n            if (_listeners) {\n              if (listeners) {\n                listeners.push.apply(listeners, _listeners);\n              } else {\n                listeners = _listeners;\n              }\n            }\n          }\n        }\n        return listeners;\n      } else if (currentType === '**') {\n        endReached = (i + 1 === typeLength || (i + 2 === typeLength && nextType === '*'));\n        if (endReached && tree._listeners) {\n          // The next element has a _listeners, add it to the handlers.\n          listeners = searchListenerTree(handlers, type, tree, typeLength, typeLength);\n        }\n\n        branches = ownKeys(tree);\n        n = branches.length;\n        while (n-- > 0) {\n          branch = branches[n];\n          if (branch !== '_listeners') {\n            if (branch === '*' || branch === '**') {\n              if (tree[branch]._listeners && !endReached) {\n                _listeners = searchListenerTree(handlers, type, tree[branch], typeLength, typeLength);\n                if (_listeners) {\n                  if (listeners) {\n                    listeners.push.apply(listeners, _listeners);\n                  } else {\n                    listeners = _listeners;\n                  }\n                }\n              }\n              _listeners = searchListenerTree(handlers, type, tree[branch], i, typeLength);\n            } else if (branch === nextType) {\n              _listeners = searchListenerTree(handlers, type, tree[branch], i + 2, typeLength);\n            } else {\n              // No match on this one, shift into the tree but not in the type array.\n              _listeners = searchListenerTree(handlers, type, tree[branch], i, typeLength);\n            }\n            if (_listeners) {\n              if (listeners) {\n                listeners.push.apply(listeners, _listeners);\n              } else {\n                listeners = _listeners;\n              }\n            }\n          }\n        }\n        return listeners;\n      } else if (tree[currentType]) {\n        listeners = searchListenerTree(handlers, type, tree[currentType], i + 1, typeLength);\n      }\n    }\n\n      xTree = tree['*'];\n    if (xTree) {\n      //\n      // If the listener tree will allow any match for this part,\n      // then recursively explore all branches of the tree\n      //\n      searchListenerTree(handlers, type, xTree, i + 1, typeLength);\n    }\n\n    xxTree = tree['**'];\n    if (xxTree) {\n      if (i < typeLength) {\n        if (xxTree._listeners) {\n          // If we have a listener on a '**', it will catch all, so add its handler.\n          searchListenerTree(handlers, type, xxTree, typeLength, typeLength);\n        }\n\n        // Build arrays of matching next branches and others.\n        branches= ownKeys(xxTree);\n        n= branches.length;\n        while(n-->0){\n          branch= branches[n];\n          if (branch !== '_listeners') {\n            if (branch === nextType) {\n              // We know the next element will match, so jump twice.\n              searchListenerTree(handlers, type, xxTree[branch], i + 2, typeLength);\n            } else if (branch === currentType) {\n              // Current node matches, move into the tree.\n              searchListenerTree(handlers, type, xxTree[branch], i + 1, typeLength);\n            } else {\n              isolatedBranch = {};\n              isolatedBranch[branch] = xxTree[branch];\n              searchListenerTree(handlers, type, {'**': isolatedBranch}, i + 1, typeLength);\n            }\n          }\n        }\n      } else if (xxTree._listeners) {\n        // We have reached the end and still on a '**'\n        searchListenerTree(handlers, type, xxTree, typeLength, typeLength);\n      } else if (xxTree['*'] && xxTree['*']._listeners) {\n        searchListenerTree(handlers, type, xxTree['*'], typeLength, typeLength);\n      }\n    }\n\n    return listeners;\n  }\n\n  function growListenerTree(type, listener, prepend) {\n    var len = 0, j = 0, i, delimiter = this.delimiter, dl= delimiter.length, ns;\n\n    if(typeof type==='string') {\n      if ((i = type.indexOf(delimiter)) !== -1) {\n        ns = new Array(5);\n        do {\n          ns[len++] = type.slice(j, i);\n          j = i + dl;\n        } while ((i = type.indexOf(delimiter, j)) !== -1);\n\n        ns[len++] = type.slice(j);\n      }else{\n        ns= [type];\n        len= 1;\n      }\n    }else{\n      ns= type;\n      len= type.length;\n    }\n\n    //\n    // Looks for two consecutive '**', if so, don't add the event at all.\n    //\n    if (len > 1) {\n      for (i = 0; i + 1 < len; i++) {\n        if (ns[i] === '**' && ns[i + 1] === '**') {\n          return;\n        }\n      }\n    }\n\n\n\n    var tree = this.listenerTree, name;\n\n    for (i = 0; i < len; i++) {\n      name = ns[i];\n\n      tree = tree[name] || (tree[name] = {});\n\n      if (i === len - 1) {\n        if (!tree._listeners) {\n          tree._listeners = listener;\n        } else {\n          if (typeof tree._listeners === 'function') {\n            tree._listeners = [tree._listeners];\n          }\n\n          if (prepend) {\n            tree._listeners.unshift(listener);\n          } else {\n            tree._listeners.push(listener);\n          }\n\n          if (\n              !tree._listeners.warned &&\n              this._maxListeners > 0 &&\n              tree._listeners.length > this._maxListeners\n          ) {\n            tree._listeners.warned = true;\n            logPossibleMemoryLeak.call(this, tree._listeners.length, name);\n          }\n        }\n        return true;\n      }\n    }\n\n    return true;\n  }\n\n  function collectTreeEvents(tree, events, root, asArray){\n     var branches= ownKeys(tree);\n     var i= branches.length;\n     var branch, branchName, path;\n     var hasListeners= tree['_listeners'];\n     var isArrayPath;\n\n     while(i-->0){\n         branchName= branches[i];\n\n         branch= tree[branchName];\n\n         if(branchName==='_listeners'){\n             path= root;\n         }else {\n             path = root ? root.concat(branchName) : [branchName];\n         }\n\n         isArrayPath= asArray || typeof branchName==='symbol';\n\n         hasListeners && events.push(isArrayPath? path : path.join(this.delimiter));\n\n         if(typeof branch==='object'){\n             collectTreeEvents.call(this, branch, events, path, isArrayPath);\n         }\n     }\n\n     return events;\n  }\n\n  function recursivelyGarbageCollect(root) {\n    var keys = ownKeys(root);\n    var i= keys.length;\n    var obj, key, flag;\n    while(i-->0){\n      key = keys[i];\n      obj = root[key];\n\n      if(obj){\n          flag= true;\n          if(key !== '_listeners' && !recursivelyGarbageCollect(obj)){\n             delete root[key];\n          }\n      }\n    }\n\n    return flag;\n  }\n\n  function Listener(emitter, event, listener){\n    this.emitter= emitter;\n    this.event= event;\n    this.listener= listener;\n  }\n\n  Listener.prototype.off= function(){\n    this.emitter.off(this.event, this.listener);\n    return this;\n  };\n\n  function setupListener(event, listener, options){\n      if (options === true) {\n        promisify = true;\n      } else if (options === false) {\n        async = true;\n      } else {\n        if (!options || typeof options !== 'object') {\n          throw TypeError('options should be an object or true');\n        }\n        var async = options.async;\n        var promisify = options.promisify;\n        var nextTick = options.nextTick;\n        var objectify = options.objectify;\n      }\n\n      if (async || nextTick || promisify) {\n        var _listener = listener;\n        var _origin = listener._origin || listener;\n\n        if (nextTick && !nextTickSupported) {\n          throw Error('process.nextTick is not supported');\n        }\n\n        if (promisify === undefined) {\n          promisify = listener.constructor.name === 'AsyncFunction';\n        }\n\n        listener = function () {\n          var args = arguments;\n          var context = this;\n          var event = this.event;\n\n          return promisify ? (nextTick ? Promise.resolve() : new Promise(function (resolve) {\n            _setImmediate(resolve);\n          }).then(function () {\n            context.event = event;\n            return _listener.apply(context, args)\n          })) : (nextTick ? process.nextTick : _setImmediate)(function () {\n            context.event = event;\n            _listener.apply(context, args)\n          });\n        };\n\n        listener._async = true;\n        listener._origin = _origin;\n      }\n\n    return [listener, objectify? new Listener(this, event, listener): this];\n  }\n\n  function EventEmitter(conf) {\n    this._events = {};\n    this._newListener = false;\n    this._removeListener = false;\n    this.verboseMemoryLeak = false;\n    configure.call(this, conf);\n  }\n\n  EventEmitter.EventEmitter2 = EventEmitter; // backwards compatibility for exporting EventEmitter property\n\n  EventEmitter.prototype.listenTo= function(target, events, options){\n    if(typeof target!=='object'){\n      throw TypeError('target musts be an object');\n    }\n\n    var emitter= this;\n\n    options = resolveOptions(options, {\n      on: undefined,\n      off: undefined,\n      reducers: undefined\n    }, {\n      on: functionReducer,\n      off: functionReducer,\n      reducers: objectFunctionReducer\n    });\n\n    function listen(events){\n      if(typeof events!=='object'){\n        throw TypeError('events must be an object');\n      }\n\n      var reducers= options.reducers;\n      var index= findTargetIndex.call(emitter, target);\n      var observer;\n\n      if(index===-1){\n        observer= new TargetObserver(emitter, target, options);\n      }else{\n        observer= emitter._observers[index];\n      }\n\n      var keys= ownKeys(events);\n      var len= keys.length;\n      var event;\n      var isSingleReducer= typeof reducers==='function';\n\n      for(var i=0; i<len; i++){\n        event= keys[i];\n        observer.subscribe(\n            event,\n            events[event] || event,\n            isSingleReducer ? reducers : reducers && reducers[event]\n        );\n      }\n    }\n\n    isArray(events)?\n        listen(toObject(events)) :\n        (typeof events==='string'? listen(toObject(events.split(/\\s+/))): listen(events));\n\n    return this;\n  };\n\n  EventEmitter.prototype.stopListeningTo = function (target, event) {\n    var observers = this._observers;\n\n    if(!observers){\n      return false;\n    }\n\n    var i = observers.length;\n    var observer;\n    var matched= false;\n\n    if(target && typeof target!=='object'){\n      throw TypeError('target should be an object');\n    }\n\n    while (i-- > 0) {\n      observer = observers[i];\n      if (!target || observer._target === target) {\n        observer.unsubscribe(event);\n        matched= true;\n      }\n    }\n\n    return matched;\n  };\n\n  // By default EventEmitters will print a warning if more than\n  // 10 listeners are added to it. This is a useful default which\n  // helps finding memory leaks.\n  //\n  // Obviously not all Emitters should be limited to 10. This function allows\n  // that to be increased. Set to zero for unlimited.\n\n  EventEmitter.prototype.delimiter = '.';\n\n  EventEmitter.prototype.setMaxListeners = function(n) {\n    if (n !== undefined) {\n      this._maxListeners = n;\n      if (!this._conf) this._conf = {};\n      this._conf.maxListeners = n;\n    }\n  };\n\n  EventEmitter.prototype.getMaxListeners = function() {\n    return this._maxListeners;\n  };\n\n  EventEmitter.prototype.event = '';\n\n  EventEmitter.prototype.once = function(event, fn, options) {\n    return this._once(event, fn, false, options);\n  };\n\n  EventEmitter.prototype.prependOnceListener = function(event, fn, options) {\n    return this._once(event, fn, true, options);\n  };\n\n  EventEmitter.prototype._once = function(event, fn, prepend, options) {\n    return this._many(event, 1, fn, prepend, options);\n  };\n\n  EventEmitter.prototype.many = function(event, ttl, fn, options) {\n    return this._many(event, ttl, fn, false, options);\n  };\n\n  EventEmitter.prototype.prependMany = function(event, ttl, fn, options) {\n    return this._many(event, ttl, fn, true, options);\n  };\n\n  EventEmitter.prototype._many = function(event, ttl, fn, prepend, options) {\n    var self = this;\n\n    if (typeof fn !== 'function') {\n      throw new Error('many only accepts instances of Function');\n    }\n\n    function listener() {\n      if (--ttl === 0) {\n        self.off(event, listener);\n      }\n      return fn.apply(this, arguments);\n    }\n\n    listener._origin = fn;\n\n    return this._on(event, listener, prepend, options);\n  };\n\n  EventEmitter.prototype.emit = function() {\n    if (!this._events && !this._all) {\n      return false;\n    }\n\n    this._events || init.call(this);\n\n    var type = arguments[0], ns, wildcard= this.wildcard;\n    var args,l,i,j, containsSymbol;\n\n    if (type === 'newListener' && !this._newListener) {\n      if (!this._events.newListener) {\n        return false;\n      }\n    }\n\n    if (wildcard) {\n      ns= type;\n      if(type!=='newListener' && type!=='removeListener'){\n        if (typeof type === 'object') {\n          l = type.length;\n          if (symbolsSupported) {\n            for (i = 0; i < l; i++) {\n              if (typeof type[i] === 'symbol') {\n                containsSymbol = true;\n                break;\n              }\n            }\n          }\n          if (!containsSymbol) {\n            type = type.join(this.delimiter);\n          }\n        }\n      }\n    }\n\n    var al = arguments.length;\n    var handler;\n\n    if (this._all && this._all.length) {\n      handler = this._all.slice();\n\n      for (i = 0, l = handler.length; i < l; i++) {\n        this.event = type;\n        switch (al) {\n        case 1:\n          handler[i].call(this, type);\n          break;\n        case 2:\n          handler[i].call(this, type, arguments[1]);\n          break;\n        case 3:\n          handler[i].call(this, type, arguments[1], arguments[2]);\n          break;\n        default:\n          handler[i].apply(this, arguments);\n        }\n      }\n    }\n\n    if (wildcard) {\n      handler = [];\n      searchListenerTree.call(this, handler, ns, this.listenerTree, 0, l);\n    } else {\n      handler = this._events[type];\n      if (typeof handler === 'function') {\n        this.event = type;\n        switch (al) {\n        case 1:\n          handler.call(this);\n          break;\n        case 2:\n          handler.call(this, arguments[1]);\n          break;\n        case 3:\n          handler.call(this, arguments[1], arguments[2]);\n          break;\n        default:\n          args = new Array(al - 1);\n          for (j = 1; j < al; j++) args[j - 1] = arguments[j];\n          handler.apply(this, args);\n        }\n        return true;\n      } else if (handler) {\n        // need to make copy of handlers because list can change in the middle\n        // of emit call\n        handler = handler.slice();\n      }\n    }\n\n    if (handler && handler.length) {\n      if (al > 3) {\n        args = new Array(al - 1);\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\n      }\n      for (i = 0, l = handler.length; i < l; i++) {\n        this.event = type;\n        switch (al) {\n        case 1:\n          handler[i].call(this);\n          break;\n        case 2:\n          handler[i].call(this, arguments[1]);\n          break;\n        case 3:\n          handler[i].call(this, arguments[1], arguments[2]);\n          break;\n        default:\n          handler[i].apply(this, args);\n        }\n      }\n      return true;\n    } else if (!this.ignoreErrors && !this._all && type === 'error') {\n      if (arguments[1] instanceof Error) {\n        throw arguments[1]; // Unhandled 'error' event\n      } else {\n        throw new Error(\"Uncaught, unspecified 'error' event.\");\n      }\n    }\n\n    return !!this._all;\n  };\n\n  EventEmitter.prototype.emitAsync = function() {\n    if (!this._events && !this._all) {\n      return false;\n    }\n\n    this._events || init.call(this);\n\n    var type = arguments[0], wildcard= this.wildcard, ns, containsSymbol;\n    var args,l,i,j;\n\n    if (type === 'newListener' && !this._newListener) {\n        if (!this._events.newListener) { return Promise.resolve([false]); }\n    }\n\n    if (wildcard) {\n      ns= type;\n      if(type!=='newListener' && type!=='removeListener'){\n        if (typeof type === 'object') {\n          l = type.length;\n          if (symbolsSupported) {\n            for (i = 0; i < l; i++) {\n              if (typeof type[i] === 'symbol') {\n                containsSymbol = true;\n                break;\n              }\n            }\n          }\n          if (!containsSymbol) {\n            type = type.join(this.delimiter);\n          }\n        }\n      }\n    }\n\n    var promises= [];\n\n    var al = arguments.length;\n    var handler;\n\n    if (this._all) {\n      for (i = 0, l = this._all.length; i < l; i++) {\n        this.event = type;\n        switch (al) {\n        case 1:\n          promises.push(this._all[i].call(this, type));\n          break;\n        case 2:\n          promises.push(this._all[i].call(this, type, arguments[1]));\n          break;\n        case 3:\n          promises.push(this._all[i].call(this, type, arguments[1], arguments[2]));\n          break;\n        default:\n          promises.push(this._all[i].apply(this, arguments));\n        }\n      }\n    }\n\n    if (wildcard) {\n      handler = [];\n      searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\n    } else {\n      handler = this._events[type];\n    }\n\n    if (typeof handler === 'function') {\n      this.event = type;\n      switch (al) {\n      case 1:\n        promises.push(handler.call(this));\n        break;\n      case 2:\n        promises.push(handler.call(this, arguments[1]));\n        break;\n      case 3:\n        promises.push(handler.call(this, arguments[1], arguments[2]));\n        break;\n      default:\n        args = new Array(al - 1);\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\n        promises.push(handler.apply(this, args));\n      }\n    } else if (handler && handler.length) {\n      handler = handler.slice();\n      if (al > 3) {\n        args = new Array(al - 1);\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\n      }\n      for (i = 0, l = handler.length; i < l; i++) {\n        this.event = type;\n        switch (al) {\n        case 1:\n          promises.push(handler[i].call(this));\n          break;\n        case 2:\n          promises.push(handler[i].call(this, arguments[1]));\n          break;\n        case 3:\n          promises.push(handler[i].call(this, arguments[1], arguments[2]));\n          break;\n        default:\n          promises.push(handler[i].apply(this, args));\n        }\n      }\n    } else if (!this.ignoreErrors && !this._all && type === 'error') {\n      if (arguments[1] instanceof Error) {\n        return Promise.reject(arguments[1]); // Unhandled 'error' event\n      } else {\n        return Promise.reject(\"Uncaught, unspecified 'error' event.\");\n      }\n    }\n\n    return Promise.all(promises);\n  };\n\n  EventEmitter.prototype.on = function(type, listener, options) {\n    return this._on(type, listener, false, options);\n  };\n\n  EventEmitter.prototype.prependListener = function(type, listener, options) {\n    return this._on(type, listener, true, options);\n  };\n\n  EventEmitter.prototype.onAny = function(fn) {\n    return this._onAny(fn, false);\n  };\n\n  EventEmitter.prototype.prependAny = function(fn) {\n    return this._onAny(fn, true);\n  };\n\n  EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n  EventEmitter.prototype._onAny = function(fn, prepend){\n    if (typeof fn !== 'function') {\n      throw new Error('onAny only accepts instances of Function');\n    }\n\n    if (!this._all) {\n      this._all = [];\n    }\n\n    // Add the function to the event listener collection.\n    if(prepend){\n      this._all.unshift(fn);\n    }else{\n      this._all.push(fn);\n    }\n\n    return this;\n  };\n\n  EventEmitter.prototype._on = function(type, listener, prepend, options) {\n    if (typeof type === 'function') {\n      this._onAny(type, listener);\n      return this;\n    }\n\n    if (typeof listener !== 'function') {\n      throw new Error('on only accepts instances of Function');\n    }\n    this._events || init.call(this);\n\n    var returnValue= this, temp;\n\n    if (options !== undefined) {\n      temp = setupListener.call(this, type, listener, options);\n      listener = temp[0];\n      returnValue = temp[1];\n    }\n\n    // To avoid recursion in the case that type == \"newListeners\"! Before\n    // adding it to the listeners, first emit \"newListeners\".\n    if (this._newListener) {\n      this.emit('newListener', type, listener);\n    }\n\n    if (this.wildcard) {\n      growListenerTree.call(this, type, listener, prepend);\n      return returnValue;\n    }\n\n    if (!this._events[type]) {\n      // Optimize the case of one listener. Don't need the extra array object.\n      this._events[type] = listener;\n    } else {\n      if (typeof this._events[type] === 'function') {\n        // Change to array.\n        this._events[type] = [this._events[type]];\n      }\n\n      // If we've already got an array, just add\n      if(prepend){\n        this._events[type].unshift(listener);\n      }else{\n        this._events[type].push(listener);\n      }\n\n      // Check for listener leak\n      if (\n        !this._events[type].warned &&\n        this._maxListeners > 0 &&\n        this._events[type].length > this._maxListeners\n      ) {\n        this._events[type].warned = true;\n        logPossibleMemoryLeak.call(this, this._events[type].length, type);\n      }\n    }\n\n    return returnValue;\n  };\n\n  EventEmitter.prototype.off = function(type, listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('removeListener only takes instances of Function');\n    }\n\n    var handlers,leafs=[];\n\n    if(this.wildcard) {\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n      if(!leafs) return this;\n    } else {\n      // does not use listeners(), so no side effect of creating _events[type]\n      if (!this._events[type]) return this;\n      handlers = this._events[type];\n      leafs.push({_listeners:handlers});\n    }\n\n    for (var iLeaf=0; iLeaf<leafs.length; iLeaf++) {\n      var leaf = leafs[iLeaf];\n      handlers = leaf._listeners;\n      if (isArray(handlers)) {\n\n        var position = -1;\n\n        for (var i = 0, length = handlers.length; i < length; i++) {\n          if (handlers[i] === listener ||\n            (handlers[i].listener && handlers[i].listener === listener) ||\n            (handlers[i]._origin && handlers[i]._origin === listener)) {\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0) {\n          continue;\n        }\n\n        if(this.wildcard) {\n          leaf._listeners.splice(position, 1);\n        }\n        else {\n          this._events[type].splice(position, 1);\n        }\n\n        if (handlers.length === 0) {\n          if(this.wildcard) {\n            delete leaf._listeners;\n          }\n          else {\n            delete this._events[type];\n          }\n        }\n        if (this._removeListener)\n          this.emit(\"removeListener\", type, listener);\n\n        return this;\n      }\n      else if (handlers === listener ||\n        (handlers.listener && handlers.listener === listener) ||\n        (handlers._origin && handlers._origin === listener)) {\n        if(this.wildcard) {\n          delete leaf._listeners;\n        }\n        else {\n          delete this._events[type];\n        }\n        if (this._removeListener)\n          this.emit(\"removeListener\", type, listener);\n      }\n    }\n\n    this.listenerTree && recursivelyGarbageCollect(this.listenerTree);\n\n    return this;\n  };\n\n  EventEmitter.prototype.offAny = function(fn) {\n    var i = 0, l = 0, fns;\n    if (fn && this._all && this._all.length > 0) {\n      fns = this._all;\n      for(i = 0, l = fns.length; i < l; i++) {\n        if(fn === fns[i]) {\n          fns.splice(i, 1);\n          if (this._removeListener)\n            this.emit(\"removeListenerAny\", fn);\n          return this;\n        }\n      }\n    } else {\n      fns = this._all;\n      if (this._removeListener) {\n        for(i = 0, l = fns.length; i < l; i++)\n          this.emit(\"removeListenerAny\", fns[i]);\n      }\n      this._all = [];\n    }\n    return this;\n  };\n\n  EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\n\n  EventEmitter.prototype.removeAllListeners = function (type) {\n    if (type === undefined) {\n      !this._events || init.call(this);\n      return this;\n    }\n\n    if (this.wildcard) {\n      var leafs = searchListenerTree.call(this, null, type, this.listenerTree, 0), leaf, i;\n      if (!leafs) return this;\n      for (i = 0; i < leafs.length; i++) {\n        leaf = leafs[i];\n        leaf._listeners = null;\n      }\n      this.listenerTree && recursivelyGarbageCollect(this.listenerTree);\n    } else if (this._events) {\n      this._events[type] = null;\n    }\n    return this;\n  };\n\n  EventEmitter.prototype.listeners = function (type) {\n    var _events = this._events;\n    var keys, listeners, allListeners;\n    var i;\n    var listenerTree;\n\n    if (type === undefined) {\n      if (this.wildcard) {\n        throw Error('event name required for wildcard emitter');\n      }\n\n      if (!_events) {\n        return [];\n      }\n\n      keys = ownKeys(_events);\n      i = keys.length;\n      allListeners = [];\n      while (i-- > 0) {\n        listeners = _events[keys[i]];\n        if (typeof listeners === 'function') {\n          allListeners.push(listeners);\n        } else {\n          allListeners.push.apply(allListeners, listeners);\n        }\n      }\n      return allListeners;\n    } else {\n      if (this.wildcard) {\n        listenerTree= this.listenerTree;\n        if(!listenerTree) return [];\n        var handlers = [];\n        var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n        searchListenerTree.call(this, handlers, ns, listenerTree, 0);\n        return handlers;\n      }\n\n      if (!_events) {\n        return [];\n      }\n\n      listeners = _events[type];\n\n      if (!listeners) {\n        return [];\n      }\n      return typeof listeners === 'function' ? [listeners] : listeners;\n    }\n  };\n\n  EventEmitter.prototype.eventNames = function(nsAsArray){\n    var _events= this._events;\n    return this.wildcard? collectTreeEvents.call(this, this.listenerTree, [], null, nsAsArray) : (_events? ownKeys(_events) : []);\n  };\n\n  EventEmitter.prototype.listenerCount = function(type) {\n    return this.listeners(type).length;\n  };\n\n  EventEmitter.prototype.hasListeners = function (type) {\n    if (this.wildcard) {\n      var handlers = [];\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\n      return handlers.length > 0;\n    }\n\n    var _events = this._events;\n    var _all = this._all;\n\n    return !!(_all && _all.length || _events && (type === undefined ? ownKeys(_events).length : _events[type]));\n  };\n\n  EventEmitter.prototype.listenersAny = function() {\n\n    if(this._all) {\n      return this._all;\n    }\n    else {\n      return [];\n    }\n\n  };\n\n  EventEmitter.prototype.waitFor = function (event, options) {\n    var self = this;\n    var type = typeof options;\n    if (type === 'number') {\n      options = {timeout: options};\n    } else if (type === 'function') {\n      options = {filter: options};\n    }\n\n    options= resolveOptions(options, {\n      timeout: 0,\n      filter: undefined,\n      handleError: false,\n      Promise: Promise,\n      overload: false\n    }, {\n      filter: functionReducer,\n      Promise: constructorReducer\n    });\n\n    return makeCancelablePromise(options.Promise, function (resolve, reject, onCancel) {\n      function listener() {\n        var filter= options.filter;\n        if (filter && !filter.apply(self, arguments)) {\n          return;\n        }\n        self.off(event, listener);\n        if (options.handleError) {\n          var err = arguments[0];\n          err ? reject(err) : resolve(toArray.apply(null, arguments).slice(1));\n        } else {\n          resolve(toArray.apply(null, arguments));\n        }\n      }\n\n      onCancel(function(){\n        self.off(event, listener);\n      });\n\n      self._on(event, listener, false);\n    }, {\n      timeout: options.timeout,\n      overload: options.overload\n    })\n  };\n\n  function once(emitter, name, options) {\n    options= resolveOptions(options, {\n      Promise: Promise,\n      timeout: 0,\n      overload: false\n    }, {\n      Promise: constructorReducer\n    });\n\n    var _Promise= options.Promise;\n\n    return makeCancelablePromise(_Promise, function(resolve, reject, onCancel){\n      var handler;\n      if (typeof emitter.addEventListener === 'function') {\n        handler=  function () {\n          resolve(toArray.apply(null, arguments));\n        };\n\n        onCancel(function(){\n          emitter.removeEventListener(name, handler);\n        });\n\n        emitter.addEventListener(\n            name,\n            handler,\n            {once: true}\n        );\n        return;\n      }\n\n      var eventListener = function(){\n        errorListener && emitter.removeListener('error', errorListener);\n        resolve(toArray.apply(null, arguments));\n      };\n\n      var errorListener;\n\n      if (name !== 'error') {\n        errorListener = function (err){\n          emitter.removeListener(name, eventListener);\n          reject(err);\n        };\n\n        emitter.once('error', errorListener);\n      }\n\n      onCancel(function(){\n        errorListener && emitter.removeListener('error', errorListener);\n        emitter.removeListener(name, eventListener);\n      });\n\n      emitter.once(name, eventListener);\n    }, {\n      timeout: options.timeout,\n      overload: options.overload\n    });\n  }\n\n  var prototype= EventEmitter.prototype;\n\n  Object.defineProperties(EventEmitter, {\n    defaultMaxListeners: {\n      get: function () {\n        return prototype._maxListeners;\n      },\n      set: function (n) {\n        if (typeof n !== 'number' || n < 0 || Number.isNaN(n)) {\n          throw TypeError('n must be a non-negative number')\n        }\n        prototype._maxListeners = n;\n      },\n      enumerable: true\n    },\n    once: {\n      value: once,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  Object.defineProperties(prototype, {\n      _maxListeners: {\n          value: defaultMaxListeners,\n          writable: true,\n          configurable: true\n      },\n      _observers: {value: null, writable: true, configurable: true}\n  });\n\n  if (typeof define === 'function' && define.amd) {\n     // AMD. Register as an anonymous module.\n    define(function() {\n      return EventEmitter;\n    });\n  } else if (typeof exports === 'object') {\n    // CommonJS\n    module.exports = EventEmitter;\n  }\n  else {\n    // global for any kind of environment.\n    var _global= new Function('','return this')();\n    _global.EventEmitter2 = EventEmitter;\n  }\n}();\n", "'use strict'\n\nimport Condition from './condition'\nimport RuleResult from './rule-result'\nimport debug from './debug'\nimport deepClone from 'clone'\nimport EventEmitter from 'eventemitter2'\n\nclass Rule extends EventEmitter {\n  /**\n   * returns a new Rule instance\n   * @param {object,string} options, or json string that can be parsed into options\n   * @param {integer} options.priority (>1) - higher runs sooner.\n   * @param {Object} options.event - event to fire when rule evaluates as successful\n   * @param {string} options.event.type - name of event to emit\n   * @param {string} options.event.params - parameters to pass to the event listener\n   * @param {Object} options.conditions - conditions to evaluate when processing this rule\n   * @param {any} options.name - identifier for a particular rule, particularly valuable in RuleResult output\n   * @return {Rule} instance\n   */\n  constructor (options) {\n    super()\n    if (typeof options === 'string') {\n      options = JSON.parse(options)\n    }\n    if (options && options.conditions) {\n      this.setConditions(options.conditions)\n    }\n    if (options && options.onSuccess) {\n      this.on('success', options.onSuccess)\n    }\n    if (options && options.onFailure) {\n      this.on('failure', options.onFailure)\n    }\n    if (options && (options.name || options.name === 0)) {\n      this.setName(options.name)\n    }\n\n    const priority = (options && options.priority) || 1\n    this.setPriority(priority)\n\n    const event = (options && options.event) || { type: 'unknown' }\n    this.setEvent(event)\n  }\n\n  /**\n   * Sets the priority of the rule\n   * @param {integer} priority (>=1) - increasing the priority causes the rule to be run prior to other rules\n   */\n  setPriority (priority) {\n    priority = parseInt(priority, 10)\n    if (priority <= 0) throw new Error('Priority must be greater than zero')\n    this.priority = priority\n    return this\n  }\n\n  /**\n   * Sets the name of the rule\n   * @param {any} name - any truthy input and zero is allowed\n   */\n  setName (name) {\n    if (!name && name !== 0) {\n      throw new Error('Rule \"name\" must be defined')\n    }\n    this.name = name\n    return this\n  }\n\n  /**\n   * Sets the conditions to run when evaluating the rule.\n   * @param {object} conditions - conditions, root element must be a boolean operator\n   */\n  setConditions (conditions) {\n    if (\n      !Object.prototype.hasOwnProperty.call(conditions, 'all') &&\n      !Object.prototype.hasOwnProperty.call(conditions, 'any') &&\n      !Object.prototype.hasOwnProperty.call(conditions, 'not') &&\n      !Object.prototype.hasOwnProperty.call(conditions, 'condition')\n    ) {\n      throw new Error(\n        '\"conditions\" root must contain a single instance of \"all\", \"any\", \"not\", or \"condition\"'\n      )\n    }\n    this.conditions = new Condition(conditions)\n    return this\n  }\n\n  /**\n   * Sets the event to emit when the conditions evaluate truthy\n   * @param {object} event - event to emit\n   * @param {string} event.type - event name to emit on\n   * @param {string} event.params - parameters to emit as the argument of the event emission\n   */\n  setEvent (event) {\n    if (!event) throw new Error('Rule: setEvent() requires event object')\n    if (!Object.prototype.hasOwnProperty.call(event, 'type')) {\n      throw new Error(\n        'Rule: setEvent() requires event object with \"type\" property'\n      )\n    }\n    this.ruleEvent = {\n      type: event.type\n    }\n    if (event.params) this.ruleEvent.params = event.params\n    return this\n  }\n\n  /**\n   * returns the event object\n   * @returns {Object} event\n   */\n  getEvent () {\n    return this.ruleEvent\n  }\n\n  /**\n   * returns the priority\n   * @returns {Number} priority\n   */\n  getPriority () {\n    return this.priority\n  }\n\n  /**\n   * returns the event object\n   * @returns {Object} event\n   */\n  getConditions () {\n    return this.conditions\n  }\n\n  /**\n   * returns the engine object\n   * @returns {Object} engine\n   */\n  getEngine () {\n    return this.engine\n  }\n\n  /**\n   * Sets the engine to run the rules under\n   * @param {object} engine\n   * @returns {Rule}\n   */\n  setEngine (engine) {\n    this.engine = engine\n    return this\n  }\n\n  toJSON (stringify = true) {\n    const props = {\n      conditions: this.conditions.toJSON(false),\n      priority: this.priority,\n      event: this.ruleEvent,\n      name: this.name\n    }\n    if (stringify) {\n      return JSON.stringify(props)\n    }\n    return props\n  }\n\n  /**\n   * Priorizes an array of conditions based on \"priority\"\n   *   When no explicit priority is provided on the condition itself, the condition's priority is determine by its fact\n   * @param  {Condition[]} conditions\n   * @return {Condition[][]} prioritized two-dimensional array of conditions\n   *    Each outer array element represents a single priority(integer).  Inner array is\n   *    all conditions with that priority.\n   */\n  prioritizeConditions (conditions) {\n    const factSets = conditions.reduce((sets, condition) => {\n      // if a priority has been set on this specific condition, honor that first\n      // otherwise, use the fact's priority\n      let priority = condition.priority\n      if (!priority) {\n        const fact = this.engine.getFact(condition.fact)\n        priority = (fact && fact.priority) || 1\n      }\n      if (!sets[priority]) sets[priority] = []\n      sets[priority].push(condition)\n      return sets\n    }, {})\n    return Object.keys(factSets)\n      .sort((a, b) => {\n        return Number(a) > Number(b) ? -1 : 1 // order highest priority -> lowest\n      })\n      .map((priority) => factSets[priority])\n  }\n\n  /**\n   * Evaluates the rule, starting with the root boolean operator and recursing down\n   * All evaluation is done within the context of an almanac\n   * @return {Promise(RuleResult)} rule evaluation result\n   */\n  evaluate (almanac) {\n    const ruleResult = new RuleResult(\n      this.conditions,\n      this.ruleEvent,\n      this.priority,\n      this.name\n    )\n\n    /**\n     * Evaluates the rule conditions\n     * @param  {Condition} condition - condition to evaluate\n     * @return {Promise(true|false)} - resolves with the result of the condition evaluation\n     */\n    const evaluateCondition = (condition) => {\n      if (condition.isConditionReference()) {\n        return realize(condition)\n      } else if (condition.isBooleanOperator()) {\n        const subConditions = condition[condition.operator]\n        let comparisonPromise\n        if (condition.operator === 'all') {\n          comparisonPromise = all(subConditions)\n        } else if (condition.operator === 'any') {\n          comparisonPromise = any(subConditions)\n        } else {\n          comparisonPromise = not(subConditions)\n        }\n        // for booleans, rule passing is determined by the all/any/not result\n        return comparisonPromise.then((comparisonValue) => {\n          const passes = comparisonValue === true\n          condition.result = passes\n          return passes\n        })\n      } else {\n        return condition\n          .evaluate(almanac, this.engine.operators)\n          .then((evaluationResult) => {\n            const passes = evaluationResult.result\n            condition.factResult = evaluationResult.leftHandSideValue\n            condition.result = passes\n            return passes\n          })\n      }\n    }\n\n    /**\n     * Evalutes an array of conditions, using an 'every' or 'some' array operation\n     * @param  {Condition[]} conditions\n     * @param  {string(every|some)} array method to call for determining result\n     * @return {Promise(boolean)} whether conditions evaluated truthy or falsey based on condition evaluation + method\n     */\n    const evaluateConditions = (conditions, method) => {\n      if (!Array.isArray(conditions)) conditions = [conditions]\n\n      return Promise.all(\n        conditions.map((condition) => evaluateCondition(condition))\n      ).then((conditionResults) => {\n        debug('rule::evaluateConditions', { results: conditionResults })\n        return method.call(conditionResults, (result) => result === true)\n      })\n    }\n\n    /**\n     * Evaluates a set of conditions based on an 'all', 'any', or 'not' operator.\n     *   First, orders the top level conditions based on priority\n     *   Iterates over each priority set, evaluating each condition\n     *   If any condition results in the rule to be guaranteed truthy or falsey,\n     *   it will short-circuit and not bother evaluating any additional rules\n     * @param  {Condition[]} conditions - conditions to be evaluated\n     * @param  {string('all'|'any'|'not')} operator\n     * @return {Promise(boolean)} rule evaluation result\n     */\n    const prioritizeAndRun = (conditions, operator) => {\n      if (conditions.length === 0) {\n        return Promise.resolve(true)\n      }\n      if (conditions.length === 1) {\n        // no prioritizing is necessary, just evaluate the single condition\n        // 'all' and 'any' will give the same results with a single condition so no method is necessary\n        // this also covers the 'not' case which should only ever have a single condition\n        return evaluateCondition(conditions[0])\n      }\n      const orderedSets = this.prioritizeConditions(conditions)\n      let cursor = Promise.resolve(operator === 'all')\n      // use for() loop over Array.forEach to support IE8 without polyfill\n      for (let i = 0; i < orderedSets.length; i++) {\n        const set = orderedSets[i]\n        cursor = cursor.then((setResult) => {\n          // rely on the short-circuiting behavior of || and && to avoid evaluating subsequent conditions\n          return operator === 'any'\n            ? (setResult || evaluateConditions(set, Array.prototype.some))\n            : (setResult && evaluateConditions(set, Array.prototype.every))\n        })\n      }\n      return cursor\n    }\n\n    /**\n     * Runs an 'any' boolean operator on an array of conditions\n     * @param  {Condition[]} conditions to be evaluated\n     * @return {Promise(boolean)} condition evaluation result\n     */\n    const any = (conditions) => {\n      return prioritizeAndRun(conditions, 'any')\n    }\n\n    /**\n     * Runs an 'all' boolean operator on an array of conditions\n     * @param  {Condition[]} conditions to be evaluated\n     * @return {Promise(boolean)} condition evaluation result\n     */\n    const all = (conditions) => {\n      return prioritizeAndRun(conditions, 'all')\n    }\n\n    /**\n     * Runs a 'not' boolean operator on a single condition\n     * @param  {Condition} condition to be evaluated\n     * @return {Promise(boolean)} condition evaluation result\n     */\n    const not = (condition) => {\n      return prioritizeAndRun([condition], 'not').then((result) => !result)\n    }\n\n    /**\n     * Dereferences the condition reference and then evaluates it.\n     * @param {Condition} conditionReference\n     * @returns {Promise(boolean)} condition evaluation result\n     */\n    const realize = (conditionReference) => {\n      const condition = this.engine.conditions.get(conditionReference.condition)\n      if (!condition) {\n        if (this.engine.allowUndefinedConditions) {\n          // undefined conditions always fail\n          conditionReference.result = false\n          return Promise.resolve(false)\n        } else {\n          throw new Error(\n            `No condition ${conditionReference.condition} exists`\n          )\n        }\n      } else {\n        // project the referenced condition onto reference object and evaluate it.\n        delete conditionReference.condition\n        Object.assign(conditionReference, deepClone(condition))\n        return evaluateCondition(conditionReference)\n      }\n    }\n\n    /**\n     * Emits based on rule evaluation result, and decorates ruleResult with 'result' property\n     * @param {RuleResult} ruleResult\n     */\n    const processResult = (result) => {\n      ruleResult.setResult(result)\n      let processEvent = Promise.resolve()\n      if (this.engine.replaceFactsInEventParams) {\n        processEvent = ruleResult.resolveEventParams(almanac)\n      }\n      const event = result ? 'success' : 'failure'\n      return processEvent.then(() => this.emitAsync(event, ruleResult.event, almanac, ruleResult)).then(\n        () => ruleResult\n      )\n    }\n\n    if (ruleResult.conditions.any) {\n      return any(ruleResult.conditions.any).then((result) =>\n        processResult(result)\n      )\n    } else if (ruleResult.conditions.all) {\n      return all(ruleResult.conditions.all).then((result) =>\n        processResult(result)\n      )\n    } else if (ruleResult.conditions.not) {\n      return not(ruleResult.conditions.not).then((result) =>\n        processResult(result)\n      )\n    } else {\n      return realize(\n        ruleResult.conditions\n      ).then((result) => processResult(result))\n    }\n  }\n}\n\nexport default Rule\n", "'use strict'\n\nexport class UndefinedFactError extends Error {\n  constructor (...props) {\n    super(...props)\n    this.code = 'UNDEFINED_FACT'\n  }\n}\n", "import vm from 'vm';\n\n/**\n * @implements {IHooks}\n */\nclass Hooks {\n  /**\n   * @callback HookCallback\n   * @this {*|Jsep} this\n   * @param {Jsep} env\n   * @returns: void\n   */\n  /**\n   * Adds the given callback to the list of callbacks for the given hook.\n   *\n   * The callback will be invoked when the hook it is registered for is run.\n   *\n   * One callback function can be registered to multiple hooks and the same hook multiple times.\n   *\n   * @param {string|object} name The name of the hook, or an object of callbacks keyed by name\n   * @param {HookCallback|boolean} callback The callback function which is given environment variables.\n   * @param {?boolean} [first=false] Will add the hook to the top of the list (defaults to the bottom)\n   * @public\n   */\n  add(name, callback, first) {\n    if (typeof arguments[0] != 'string') {\n      // Multiple hook callbacks, keyed by name\n      for (let name in arguments[0]) {\n        this.add(name, arguments[0][name], arguments[1]);\n      }\n    } else {\n      (Array.isArray(name) ? name : [name]).forEach(function (name) {\n        this[name] = this[name] || [];\n        if (callback) {\n          this[name][first ? 'unshift' : 'push'](callback);\n        }\n      }, this);\n    }\n  }\n\n  /**\n   * Runs a hook invoking all registered callbacks with the given environment variables.\n   *\n   * Callbacks will be invoked synchronously and in the order in which they were registered.\n   *\n   * @param {string} name The name of the hook.\n   * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n   * @public\n   */\n  run(name, env) {\n    this[name] = this[name] || [];\n    this[name].forEach(function (callback) {\n      callback.call(env && env.context ? env.context : env, env);\n    });\n  }\n}\n\n/**\n * @implements {IPlugins}\n */\nclass Plugins {\n  constructor(jsep) {\n    this.jsep = jsep;\n    this.registered = {};\n  }\n\n  /**\n   * @callback PluginSetup\n   * @this {Jsep} jsep\n   * @returns: void\n   */\n  /**\n   * Adds the given plugin(s) to the registry\n   *\n   * @param {object} plugins\n   * @param {string} plugins.name The name of the plugin\n   * @param {PluginSetup} plugins.init The init function\n   * @public\n   */\n  register(...plugins) {\n    plugins.forEach(plugin => {\n      if (typeof plugin !== 'object' || !plugin.name || !plugin.init) {\n        throw new Error('Invalid JSEP plugin format');\n      }\n      if (this.registered[plugin.name]) {\n        // already registered. Ignore.\n        return;\n      }\n      plugin.init(this.jsep);\n      this.registered[plugin.name] = plugin;\n    });\n  }\n}\n\n//     JavaScript Expression Parser (JSEP) 1.3.9\n\nclass Jsep {\n  /**\n   * @returns {string}\n   */\n  static get version() {\n    // To be filled in by the template\n    return '1.3.9';\n  }\n\n  /**\n   * @returns {string}\n   */\n  static toString() {\n    return 'JavaScript Expression Parser (JSEP) v' + Jsep.version;\n  }\n  // ==================== CONFIG ================================\n  /**\n   * @method addUnaryOp\n   * @param {string} op_name The name of the unary op to add\n   * @returns {Jsep}\n   */\n  static addUnaryOp(op_name) {\n    Jsep.max_unop_len = Math.max(op_name.length, Jsep.max_unop_len);\n    Jsep.unary_ops[op_name] = 1;\n    return Jsep;\n  }\n\n  /**\n   * @method jsep.addBinaryOp\n   * @param {string} op_name The name of the binary op to add\n   * @param {number} precedence The precedence of the binary op (can be a float). Higher number = higher precedence\n   * @param {boolean} [isRightAssociative=false] whether operator is right-associative\n   * @returns {Jsep}\n   */\n  static addBinaryOp(op_name, precedence, isRightAssociative) {\n    Jsep.max_binop_len = Math.max(op_name.length, Jsep.max_binop_len);\n    Jsep.binary_ops[op_name] = precedence;\n    if (isRightAssociative) {\n      Jsep.right_associative.add(op_name);\n    } else {\n      Jsep.right_associative.delete(op_name);\n    }\n    return Jsep;\n  }\n\n  /**\n   * @method addIdentifierChar\n   * @param {string} char The additional character to treat as a valid part of an identifier\n   * @returns {Jsep}\n   */\n  static addIdentifierChar(char) {\n    Jsep.additional_identifier_chars.add(char);\n    return Jsep;\n  }\n\n  /**\n   * @method addLiteral\n   * @param {string} literal_name The name of the literal to add\n   * @param {*} literal_value The value of the literal\n   * @returns {Jsep}\n   */\n  static addLiteral(literal_name, literal_value) {\n    Jsep.literals[literal_name] = literal_value;\n    return Jsep;\n  }\n\n  /**\n   * @method removeUnaryOp\n   * @param {string} op_name The name of the unary op to remove\n   * @returns {Jsep}\n   */\n  static removeUnaryOp(op_name) {\n    delete Jsep.unary_ops[op_name];\n    if (op_name.length === Jsep.max_unop_len) {\n      Jsep.max_unop_len = Jsep.getMaxKeyLen(Jsep.unary_ops);\n    }\n    return Jsep;\n  }\n\n  /**\n   * @method removeAllUnaryOps\n   * @returns {Jsep}\n   */\n  static removeAllUnaryOps() {\n    Jsep.unary_ops = {};\n    Jsep.max_unop_len = 0;\n    return Jsep;\n  }\n\n  /**\n   * @method removeIdentifierChar\n   * @param {string} char The additional character to stop treating as a valid part of an identifier\n   * @returns {Jsep}\n   */\n  static removeIdentifierChar(char) {\n    Jsep.additional_identifier_chars.delete(char);\n    return Jsep;\n  }\n\n  /**\n   * @method removeBinaryOp\n   * @param {string} op_name The name of the binary op to remove\n   * @returns {Jsep}\n   */\n  static removeBinaryOp(op_name) {\n    delete Jsep.binary_ops[op_name];\n    if (op_name.length === Jsep.max_binop_len) {\n      Jsep.max_binop_len = Jsep.getMaxKeyLen(Jsep.binary_ops);\n    }\n    Jsep.right_associative.delete(op_name);\n    return Jsep;\n  }\n\n  /**\n   * @method removeAllBinaryOps\n   * @returns {Jsep}\n   */\n  static removeAllBinaryOps() {\n    Jsep.binary_ops = {};\n    Jsep.max_binop_len = 0;\n    return Jsep;\n  }\n\n  /**\n   * @method removeLiteral\n   * @param {string} literal_name The name of the literal to remove\n   * @returns {Jsep}\n   */\n  static removeLiteral(literal_name) {\n    delete Jsep.literals[literal_name];\n    return Jsep;\n  }\n\n  /**\n   * @method removeAllLiterals\n   * @returns {Jsep}\n   */\n  static removeAllLiterals() {\n    Jsep.literals = {};\n    return Jsep;\n  }\n  // ==================== END CONFIG ============================\n\n  /**\n   * @returns {string}\n   */\n  get char() {\n    return this.expr.charAt(this.index);\n  }\n\n  /**\n   * @returns {number}\n   */\n  get code() {\n    return this.expr.charCodeAt(this.index);\n  }\n  /**\n   * @param {string} expr a string with the passed in express\n   * @returns Jsep\n   */\n  constructor(expr) {\n    // `index` stores the character number we are currently at\n    // All of the gobbles below will modify `index` as we move along\n    this.expr = expr;\n    this.index = 0;\n  }\n\n  /**\n   * static top-level parser\n   * @returns {jsep.Expression}\n   */\n  static parse(expr) {\n    return new Jsep(expr).parse();\n  }\n\n  /**\n   * Get the longest key length of any object\n   * @param {object} obj\n   * @returns {number}\n   */\n  static getMaxKeyLen(obj) {\n    return Math.max(0, ...Object.keys(obj).map(k => k.length));\n  }\n\n  /**\n   * `ch` is a character code in the next three functions\n   * @param {number} ch\n   * @returns {boolean}\n   */\n  static isDecimalDigit(ch) {\n    return ch >= 48 && ch <= 57; // 0...9\n  }\n\n  /**\n   * Returns the precedence of a binary operator or `0` if it isn't a binary operator. Can be float.\n   * @param {string} op_val\n   * @returns {number}\n   */\n  static binaryPrecedence(op_val) {\n    return Jsep.binary_ops[op_val] || 0;\n  }\n\n  /**\n   * Looks for start of identifier\n   * @param {number} ch\n   * @returns {boolean}\n   */\n  static isIdentifierStart(ch) {\n    return ch >= 65 && ch <= 90 ||\n    // A...Z\n    ch >= 97 && ch <= 122 ||\n    // a...z\n    ch >= 128 && !Jsep.binary_ops[String.fromCharCode(ch)] ||\n    // any non-ASCII that is not an operator\n    Jsep.additional_identifier_chars.has(String.fromCharCode(ch)); // additional characters\n  }\n\n  /**\n   * @param {number} ch\n   * @returns {boolean}\n   */\n  static isIdentifierPart(ch) {\n    return Jsep.isIdentifierStart(ch) || Jsep.isDecimalDigit(ch);\n  }\n\n  /**\n   * throw error at index of the expression\n   * @param {string} message\n   * @throws\n   */\n  throwError(message) {\n    const error = new Error(message + ' at character ' + this.index);\n    error.index = this.index;\n    error.description = message;\n    throw error;\n  }\n\n  /**\n   * Run a given hook\n   * @param {string} name\n   * @param {jsep.Expression|false} [node]\n   * @returns {?jsep.Expression}\n   */\n  runHook(name, node) {\n    if (Jsep.hooks[name]) {\n      const env = {\n        context: this,\n        node\n      };\n      Jsep.hooks.run(name, env);\n      return env.node;\n    }\n    return node;\n  }\n\n  /**\n   * Runs a given hook until one returns a node\n   * @param {string} name\n   * @returns {?jsep.Expression}\n   */\n  searchHook(name) {\n    if (Jsep.hooks[name]) {\n      const env = {\n        context: this\n      };\n      Jsep.hooks[name].find(function (callback) {\n        callback.call(env.context, env);\n        return env.node;\n      });\n      return env.node;\n    }\n  }\n\n  /**\n   * Push `index` up to the next non-space character\n   */\n  gobbleSpaces() {\n    let ch = this.code;\n    // Whitespace\n    while (ch === Jsep.SPACE_CODE || ch === Jsep.TAB_CODE || ch === Jsep.LF_CODE || ch === Jsep.CR_CODE) {\n      ch = this.expr.charCodeAt(++this.index);\n    }\n    this.runHook('gobble-spaces');\n  }\n\n  /**\n   * Top-level method to parse all expressions and returns compound or single node\n   * @returns {jsep.Expression}\n   */\n  parse() {\n    this.runHook('before-all');\n    const nodes = this.gobbleExpressions();\n\n    // If there's only one expression just try returning the expression\n    const node = nodes.length === 1 ? nodes[0] : {\n      type: Jsep.COMPOUND,\n      body: nodes\n    };\n    return this.runHook('after-all', node);\n  }\n\n  /**\n   * top-level parser (but can be reused within as well)\n   * @param {number} [untilICode]\n   * @returns {jsep.Expression[]}\n   */\n  gobbleExpressions(untilICode) {\n    let nodes = [],\n      ch_i,\n      node;\n    while (this.index < this.expr.length) {\n      ch_i = this.code;\n\n      // Expressions can be separated by semicolons, commas, or just inferred without any\n      // separators\n      if (ch_i === Jsep.SEMCOL_CODE || ch_i === Jsep.COMMA_CODE) {\n        this.index++; // ignore separators\n      } else {\n        // Try to gobble each expression individually\n        if (node = this.gobbleExpression()) {\n          nodes.push(node);\n          // If we weren't able to find a binary expression and are out of room, then\n          // the expression passed in probably has too much\n        } else if (this.index < this.expr.length) {\n          if (ch_i === untilICode) {\n            break;\n          }\n          this.throwError('Unexpected \"' + this.char + '\"');\n        }\n      }\n    }\n    return nodes;\n  }\n\n  /**\n   * The main parsing function.\n   * @returns {?jsep.Expression}\n   */\n  gobbleExpression() {\n    const node = this.searchHook('gobble-expression') || this.gobbleBinaryExpression();\n    this.gobbleSpaces();\n    return this.runHook('after-expression', node);\n  }\n\n  /**\n   * Search for the operation portion of the string (e.g. `+`, `===`)\n   * Start by taking the longest possible binary operations (3 characters: `===`, `!==`, `>>>`)\n   * and move down from 3 to 2 to 1 character until a matching binary operation is found\n   * then, return that binary operation\n   * @returns {string|boolean}\n   */\n  gobbleBinaryOp() {\n    this.gobbleSpaces();\n    let to_check = this.expr.substr(this.index, Jsep.max_binop_len);\n    let tc_len = to_check.length;\n    while (tc_len > 0) {\n      // Don't accept a binary op when it is an identifier.\n      // Binary ops that start with a identifier-valid character must be followed\n      // by a non identifier-part valid character\n      if (Jsep.binary_ops.hasOwnProperty(to_check) && (!Jsep.isIdentifierStart(this.code) || this.index + to_check.length < this.expr.length && !Jsep.isIdentifierPart(this.expr.charCodeAt(this.index + to_check.length)))) {\n        this.index += tc_len;\n        return to_check;\n      }\n      to_check = to_check.substr(0, --tc_len);\n    }\n    return false;\n  }\n\n  /**\n   * This function is responsible for gobbling an individual expression,\n   * e.g. `1`, `1+2`, `a+(b*2)-Math.sqrt(2)`\n   * @returns {?jsep.BinaryExpression}\n   */\n  gobbleBinaryExpression() {\n    let node, biop, prec, stack, biop_info, left, right, i, cur_biop;\n\n    // First, try to get the leftmost thing\n    // Then, check to see if there's a binary operator operating on that leftmost thing\n    // Don't gobbleBinaryOp without a left-hand-side\n    left = this.gobbleToken();\n    if (!left) {\n      return left;\n    }\n    biop = this.gobbleBinaryOp();\n\n    // If there wasn't a binary operator, just return the leftmost node\n    if (!biop) {\n      return left;\n    }\n\n    // Otherwise, we need to start a stack to properly place the binary operations in their\n    // precedence structure\n    biop_info = {\n      value: biop,\n      prec: Jsep.binaryPrecedence(biop),\n      right_a: Jsep.right_associative.has(biop)\n    };\n    right = this.gobbleToken();\n    if (!right) {\n      this.throwError(\"Expected expression after \" + biop);\n    }\n    stack = [left, biop_info, right];\n\n    // Properly deal with precedence using [recursive descent](http://www.engr.mun.ca/~theo/Misc/exp_parsing.htm)\n    while (biop = this.gobbleBinaryOp()) {\n      prec = Jsep.binaryPrecedence(biop);\n      if (prec === 0) {\n        this.index -= biop.length;\n        break;\n      }\n      biop_info = {\n        value: biop,\n        prec,\n        right_a: Jsep.right_associative.has(biop)\n      };\n      cur_biop = biop;\n\n      // Reduce: make a binary expression from the three topmost entries.\n      const comparePrev = prev => biop_info.right_a && prev.right_a ? prec > prev.prec : prec <= prev.prec;\n      while (stack.length > 2 && comparePrev(stack[stack.length - 2])) {\n        right = stack.pop();\n        biop = stack.pop().value;\n        left = stack.pop();\n        node = {\n          type: Jsep.BINARY_EXP,\n          operator: biop,\n          left,\n          right\n        };\n        stack.push(node);\n      }\n      node = this.gobbleToken();\n      if (!node) {\n        this.throwError(\"Expected expression after \" + cur_biop);\n      }\n      stack.push(biop_info, node);\n    }\n    i = stack.length - 1;\n    node = stack[i];\n    while (i > 1) {\n      node = {\n        type: Jsep.BINARY_EXP,\n        operator: stack[i - 1].value,\n        left: stack[i - 2],\n        right: node\n      };\n      i -= 2;\n    }\n    return node;\n  }\n\n  /**\n   * An individual part of a binary expression:\n   * e.g. `foo.bar(baz)`, `1`, `\"abc\"`, `(a % 2)` (because it's in parenthesis)\n   * @returns {boolean|jsep.Expression}\n   */\n  gobbleToken() {\n    let ch, to_check, tc_len, node;\n    this.gobbleSpaces();\n    node = this.searchHook('gobble-token');\n    if (node) {\n      return this.runHook('after-token', node);\n    }\n    ch = this.code;\n    if (Jsep.isDecimalDigit(ch) || ch === Jsep.PERIOD_CODE) {\n      // Char code 46 is a dot `.` which can start off a numeric literal\n      return this.gobbleNumericLiteral();\n    }\n    if (ch === Jsep.SQUOTE_CODE || ch === Jsep.DQUOTE_CODE) {\n      // Single or double quotes\n      node = this.gobbleStringLiteral();\n    } else if (ch === Jsep.OBRACK_CODE) {\n      node = this.gobbleArray();\n    } else {\n      to_check = this.expr.substr(this.index, Jsep.max_unop_len);\n      tc_len = to_check.length;\n      while (tc_len > 0) {\n        // Don't accept an unary op when it is an identifier.\n        // Unary ops that start with a identifier-valid character must be followed\n        // by a non identifier-part valid character\n        if (Jsep.unary_ops.hasOwnProperty(to_check) && (!Jsep.isIdentifierStart(this.code) || this.index + to_check.length < this.expr.length && !Jsep.isIdentifierPart(this.expr.charCodeAt(this.index + to_check.length)))) {\n          this.index += tc_len;\n          const argument = this.gobbleToken();\n          if (!argument) {\n            this.throwError('missing unaryOp argument');\n          }\n          return this.runHook('after-token', {\n            type: Jsep.UNARY_EXP,\n            operator: to_check,\n            argument,\n            prefix: true\n          });\n        }\n        to_check = to_check.substr(0, --tc_len);\n      }\n      if (Jsep.isIdentifierStart(ch)) {\n        node = this.gobbleIdentifier();\n        if (Jsep.literals.hasOwnProperty(node.name)) {\n          node = {\n            type: Jsep.LITERAL,\n            value: Jsep.literals[node.name],\n            raw: node.name\n          };\n        } else if (node.name === Jsep.this_str) {\n          node = {\n            type: Jsep.THIS_EXP\n          };\n        }\n      } else if (ch === Jsep.OPAREN_CODE) {\n        // open parenthesis\n        node = this.gobbleGroup();\n      }\n    }\n    if (!node) {\n      return this.runHook('after-token', false);\n    }\n    node = this.gobbleTokenProperty(node);\n    return this.runHook('after-token', node);\n  }\n\n  /**\n   * Gobble properties of of identifiers/strings/arrays/groups.\n   * e.g. `foo`, `bar.baz`, `foo['bar'].baz`\n   * It also gobbles function calls:\n   * e.g. `Math.acos(obj.angle)`\n   * @param {jsep.Expression} node\n   * @returns {jsep.Expression}\n   */\n  gobbleTokenProperty(node) {\n    this.gobbleSpaces();\n    let ch = this.code;\n    while (ch === Jsep.PERIOD_CODE || ch === Jsep.OBRACK_CODE || ch === Jsep.OPAREN_CODE || ch === Jsep.QUMARK_CODE) {\n      let optional;\n      if (ch === Jsep.QUMARK_CODE) {\n        if (this.expr.charCodeAt(this.index + 1) !== Jsep.PERIOD_CODE) {\n          break;\n        }\n        optional = true;\n        this.index += 2;\n        this.gobbleSpaces();\n        ch = this.code;\n      }\n      this.index++;\n      if (ch === Jsep.OBRACK_CODE) {\n        node = {\n          type: Jsep.MEMBER_EXP,\n          computed: true,\n          object: node,\n          property: this.gobbleExpression()\n        };\n        if (!node.property) {\n          this.throwError('Unexpected \"' + this.char + '\"');\n        }\n        this.gobbleSpaces();\n        ch = this.code;\n        if (ch !== Jsep.CBRACK_CODE) {\n          this.throwError('Unclosed [');\n        }\n        this.index++;\n      } else if (ch === Jsep.OPAREN_CODE) {\n        // A function call is being made; gobble all the arguments\n        node = {\n          type: Jsep.CALL_EXP,\n          'arguments': this.gobbleArguments(Jsep.CPAREN_CODE),\n          callee: node\n        };\n      } else if (ch === Jsep.PERIOD_CODE || optional) {\n        if (optional) {\n          this.index--;\n        }\n        this.gobbleSpaces();\n        node = {\n          type: Jsep.MEMBER_EXP,\n          computed: false,\n          object: node,\n          property: this.gobbleIdentifier()\n        };\n      }\n      if (optional) {\n        node.optional = true;\n      } // else leave undefined for compatibility with esprima\n\n      this.gobbleSpaces();\n      ch = this.code;\n    }\n    return node;\n  }\n\n  /**\n   * Parse simple numeric literals: `12`, `3.4`, `.5`. Do this by using a string to\n   * keep track of everything in the numeric literal and then calling `parseFloat` on that string\n   * @returns {jsep.Literal}\n   */\n  gobbleNumericLiteral() {\n    let number = '',\n      ch,\n      chCode;\n    while (Jsep.isDecimalDigit(this.code)) {\n      number += this.expr.charAt(this.index++);\n    }\n    if (this.code === Jsep.PERIOD_CODE) {\n      // can start with a decimal marker\n      number += this.expr.charAt(this.index++);\n      while (Jsep.isDecimalDigit(this.code)) {\n        number += this.expr.charAt(this.index++);\n      }\n    }\n    ch = this.char;\n    if (ch === 'e' || ch === 'E') {\n      // exponent marker\n      number += this.expr.charAt(this.index++);\n      ch = this.char;\n      if (ch === '+' || ch === '-') {\n        // exponent sign\n        number += this.expr.charAt(this.index++);\n      }\n      while (Jsep.isDecimalDigit(this.code)) {\n        // exponent itself\n        number += this.expr.charAt(this.index++);\n      }\n      if (!Jsep.isDecimalDigit(this.expr.charCodeAt(this.index - 1))) {\n        this.throwError('Expected exponent (' + number + this.char + ')');\n      }\n    }\n    chCode = this.code;\n\n    // Check to make sure this isn't a variable name that start with a number (123abc)\n    if (Jsep.isIdentifierStart(chCode)) {\n      this.throwError('Variable names cannot start with a number (' + number + this.char + ')');\n    } else if (chCode === Jsep.PERIOD_CODE || number.length === 1 && number.charCodeAt(0) === Jsep.PERIOD_CODE) {\n      this.throwError('Unexpected period');\n    }\n    return {\n      type: Jsep.LITERAL,\n      value: parseFloat(number),\n      raw: number\n    };\n  }\n\n  /**\n   * Parses a string literal, staring with single or double quotes with basic support for escape codes\n   * e.g. `\"hello world\"`, `'this is\\nJSEP'`\n   * @returns {jsep.Literal}\n   */\n  gobbleStringLiteral() {\n    let str = '';\n    const startIndex = this.index;\n    const quote = this.expr.charAt(this.index++);\n    let closed = false;\n    while (this.index < this.expr.length) {\n      let ch = this.expr.charAt(this.index++);\n      if (ch === quote) {\n        closed = true;\n        break;\n      } else if (ch === '\\\\') {\n        // Check for all of the common escape codes\n        ch = this.expr.charAt(this.index++);\n        switch (ch) {\n          case 'n':\n            str += '\\n';\n            break;\n          case 'r':\n            str += '\\r';\n            break;\n          case 't':\n            str += '\\t';\n            break;\n          case 'b':\n            str += '\\b';\n            break;\n          case 'f':\n            str += '\\f';\n            break;\n          case 'v':\n            str += '\\x0B';\n            break;\n          default:\n            str += ch;\n        }\n      } else {\n        str += ch;\n      }\n    }\n    if (!closed) {\n      this.throwError('Unclosed quote after \"' + str + '\"');\n    }\n    return {\n      type: Jsep.LITERAL,\n      value: str,\n      raw: this.expr.substring(startIndex, this.index)\n    };\n  }\n\n  /**\n   * Gobbles only identifiers\n   * e.g.: `foo`, `_value`, `$x1`\n   * Also, this function checks if that identifier is a literal:\n   * (e.g. `true`, `false`, `null`) or `this`\n   * @returns {jsep.Identifier}\n   */\n  gobbleIdentifier() {\n    let ch = this.code,\n      start = this.index;\n    if (Jsep.isIdentifierStart(ch)) {\n      this.index++;\n    } else {\n      this.throwError('Unexpected ' + this.char);\n    }\n    while (this.index < this.expr.length) {\n      ch = this.code;\n      if (Jsep.isIdentifierPart(ch)) {\n        this.index++;\n      } else {\n        break;\n      }\n    }\n    return {\n      type: Jsep.IDENTIFIER,\n      name: this.expr.slice(start, this.index)\n    };\n  }\n\n  /**\n   * Gobbles a list of arguments within the context of a function call\n   * or array literal. This function also assumes that the opening character\n   * `(` or `[` has already been gobbled, and gobbles expressions and commas\n   * until the terminator character `)` or `]` is encountered.\n   * e.g. `foo(bar, baz)`, `my_func()`, or `[bar, baz]`\n   * @param {number} termination\n   * @returns {jsep.Expression[]}\n   */\n  gobbleArguments(termination) {\n    const args = [];\n    let closed = false;\n    let separator_count = 0;\n    while (this.index < this.expr.length) {\n      this.gobbleSpaces();\n      let ch_i = this.code;\n      if (ch_i === termination) {\n        // done parsing\n        closed = true;\n        this.index++;\n        if (termination === Jsep.CPAREN_CODE && separator_count && separator_count >= args.length) {\n          this.throwError('Unexpected token ' + String.fromCharCode(termination));\n        }\n        break;\n      } else if (ch_i === Jsep.COMMA_CODE) {\n        // between expressions\n        this.index++;\n        separator_count++;\n        if (separator_count !== args.length) {\n          // missing argument\n          if (termination === Jsep.CPAREN_CODE) {\n            this.throwError('Unexpected token ,');\n          } else if (termination === Jsep.CBRACK_CODE) {\n            for (let arg = args.length; arg < separator_count; arg++) {\n              args.push(null);\n            }\n          }\n        }\n      } else if (args.length !== separator_count && separator_count !== 0) {\n        // NOTE: `&& separator_count !== 0` allows for either all commas, or all spaces as arguments\n        this.throwError('Expected comma');\n      } else {\n        const node = this.gobbleExpression();\n        if (!node || node.type === Jsep.COMPOUND) {\n          this.throwError('Expected comma');\n        }\n        args.push(node);\n      }\n    }\n    if (!closed) {\n      this.throwError('Expected ' + String.fromCharCode(termination));\n    }\n    return args;\n  }\n\n  /**\n   * Responsible for parsing a group of things within parentheses `()`\n   * that have no identifier in front (so not a function call)\n   * This function assumes that it needs to gobble the opening parenthesis\n   * and then tries to gobble everything within that parenthesis, assuming\n   * that the next thing it should see is the close parenthesis. If not,\n   * then the expression probably doesn't have a `)`\n   * @returns {boolean|jsep.Expression}\n   */\n  gobbleGroup() {\n    this.index++;\n    let nodes = this.gobbleExpressions(Jsep.CPAREN_CODE);\n    if (this.code === Jsep.CPAREN_CODE) {\n      this.index++;\n      if (nodes.length === 1) {\n        return nodes[0];\n      } else if (!nodes.length) {\n        return false;\n      } else {\n        return {\n          type: Jsep.SEQUENCE_EXP,\n          expressions: nodes\n        };\n      }\n    } else {\n      this.throwError('Unclosed (');\n    }\n  }\n\n  /**\n   * Responsible for parsing Array literals `[1, 2, 3]`\n   * This function assumes that it needs to gobble the opening bracket\n   * and then tries to gobble the expressions as arguments.\n   * @returns {jsep.ArrayExpression}\n   */\n  gobbleArray() {\n    this.index++;\n    return {\n      type: Jsep.ARRAY_EXP,\n      elements: this.gobbleArguments(Jsep.CBRACK_CODE)\n    };\n  }\n}\n\n// Static fields:\nconst hooks = new Hooks();\nObject.assign(Jsep, {\n  hooks,\n  plugins: new Plugins(Jsep),\n  // Node Types\n  // ----------\n  // This is the full set of types that any JSEP node can be.\n  // Store them here to save space when minified\n  COMPOUND: 'Compound',\n  SEQUENCE_EXP: 'SequenceExpression',\n  IDENTIFIER: 'Identifier',\n  MEMBER_EXP: 'MemberExpression',\n  LITERAL: 'Literal',\n  THIS_EXP: 'ThisExpression',\n  CALL_EXP: 'CallExpression',\n  UNARY_EXP: 'UnaryExpression',\n  BINARY_EXP: 'BinaryExpression',\n  ARRAY_EXP: 'ArrayExpression',\n  TAB_CODE: 9,\n  LF_CODE: 10,\n  CR_CODE: 13,\n  SPACE_CODE: 32,\n  PERIOD_CODE: 46,\n  // '.'\n  COMMA_CODE: 44,\n  // ','\n  SQUOTE_CODE: 39,\n  // single quote\n  DQUOTE_CODE: 34,\n  // double quotes\n  OPAREN_CODE: 40,\n  // (\n  CPAREN_CODE: 41,\n  // )\n  OBRACK_CODE: 91,\n  // [\n  CBRACK_CODE: 93,\n  // ]\n  QUMARK_CODE: 63,\n  // ?\n  SEMCOL_CODE: 59,\n  // ;\n  COLON_CODE: 58,\n  // :\n\n  // Operations\n  // ----------\n  // Use a quickly-accessible map to store all of the unary operators\n  // Values are set to `1` (it really doesn't matter)\n  unary_ops: {\n    '-': 1,\n    '!': 1,\n    '~': 1,\n    '+': 1\n  },\n  // Also use a map for the binary operations but set their values to their\n  // binary precedence for quick reference (higher number = higher precedence)\n  // see [Order of operations](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence)\n  binary_ops: {\n    '||': 1,\n    '&&': 2,\n    '|': 3,\n    '^': 4,\n    '&': 5,\n    '==': 6,\n    '!=': 6,\n    '===': 6,\n    '!==': 6,\n    '<': 7,\n    '>': 7,\n    '<=': 7,\n    '>=': 7,\n    '<<': 8,\n    '>>': 8,\n    '>>>': 8,\n    '+': 9,\n    '-': 9,\n    '*': 10,\n    '/': 10,\n    '%': 10\n  },\n  // sets specific binary_ops as right-associative\n  right_associative: new Set(),\n  // Additional valid identifier chars, apart from a-z, A-Z and 0-9 (except on the starting char)\n  additional_identifier_chars: new Set(['$', '_']),\n  // Literals\n  // ----------\n  // Store the values to return for the various literals we may encounter\n  literals: {\n    'true': true,\n    'false': false,\n    'null': null\n  },\n  // Except for `this`, which is special. This could be changed to something like `'self'` as well\n  this_str: 'this'\n});\nJsep.max_unop_len = Jsep.getMaxKeyLen(Jsep.unary_ops);\nJsep.max_binop_len = Jsep.getMaxKeyLen(Jsep.binary_ops);\n\n// Backward Compatibility:\nconst jsep = expr => new Jsep(expr).parse();\nconst stdClassProps = Object.getOwnPropertyNames(class Test {});\nObject.getOwnPropertyNames(Jsep).filter(prop => !stdClassProps.includes(prop) && jsep[prop] === undefined).forEach(m => {\n  jsep[m] = Jsep[m];\n});\njsep.Jsep = Jsep; // allows for const { Jsep } = require('jsep');\n\nconst CONDITIONAL_EXP = 'ConditionalExpression';\nvar ternary = {\n  name: 'ternary',\n  init(jsep) {\n    // Ternary expression: test ? consequent : alternate\n    jsep.hooks.add('after-expression', function gobbleTernary(env) {\n      if (env.node && this.code === jsep.QUMARK_CODE) {\n        this.index++;\n        const test = env.node;\n        const consequent = this.gobbleExpression();\n        if (!consequent) {\n          this.throwError('Expected expression');\n        }\n        this.gobbleSpaces();\n        if (this.code === jsep.COLON_CODE) {\n          this.index++;\n          const alternate = this.gobbleExpression();\n          if (!alternate) {\n            this.throwError('Expected expression');\n          }\n          env.node = {\n            type: CONDITIONAL_EXP,\n            test,\n            consequent,\n            alternate\n          };\n\n          // check for operators of higher priority than ternary (i.e. assignment)\n          // jsep sets || at 1, and assignment at 0.9, and conditional should be between them\n          if (test.operator && jsep.binary_ops[test.operator] <= 0.9) {\n            let newTest = test;\n            while (newTest.right.operator && jsep.binary_ops[newTest.right.operator] <= 0.9) {\n              newTest = newTest.right;\n            }\n            env.node.test = newTest.right;\n            newTest.right = env.node;\n            env.node = test;\n          }\n        } else {\n          this.throwError('Expected :');\n        }\n      }\n    });\n  }\n};\n\n// Add default plugins:\n\njsep.plugins.register(ternary);\n\nconst FSLASH_CODE = 47; // '/'\nconst BSLASH_CODE = 92; // '\\\\'\n\nvar index = {\n  name: 'regex',\n  init(jsep) {\n    // Regex literal: /abc123/ig\n    jsep.hooks.add('gobble-token', function gobbleRegexLiteral(env) {\n      if (this.code === FSLASH_CODE) {\n        const patternIndex = ++this.index;\n        let inCharSet = false;\n        while (this.index < this.expr.length) {\n          if (this.code === FSLASH_CODE && !inCharSet) {\n            const pattern = this.expr.slice(patternIndex, this.index);\n            let flags = '';\n            while (++this.index < this.expr.length) {\n              const code = this.code;\n              if (code >= 97 && code <= 122 // a...z\n              || code >= 65 && code <= 90 // A...Z\n              || code >= 48 && code <= 57) {\n                // 0-9\n                flags += this.char;\n              } else {\n                break;\n              }\n            }\n            let value;\n            try {\n              value = new RegExp(pattern, flags);\n            } catch (e) {\n              this.throwError(e.message);\n            }\n            env.node = {\n              type: jsep.LITERAL,\n              value,\n              raw: this.expr.slice(patternIndex - 1, this.index)\n            };\n\n            // allow . [] and () after regex: /regex/.test(a)\n            env.node = this.gobbleTokenProperty(env.node);\n            return env.node;\n          }\n          if (this.code === jsep.OBRACK_CODE) {\n            inCharSet = true;\n          } else if (inCharSet && this.code === jsep.CBRACK_CODE) {\n            inCharSet = false;\n          }\n          this.index += this.code === BSLASH_CODE ? 2 : 1;\n        }\n        this.throwError('Unclosed Regex');\n      }\n    });\n  }\n};\n\nconst PLUS_CODE = 43; // +\nconst MINUS_CODE = 45; // -\n\nconst plugin = {\n  name: 'assignment',\n  assignmentOperators: new Set(['=', '*=', '**=', '/=', '%=', '+=', '-=', '<<=', '>>=', '>>>=', '&=', '^=', '|=']),\n  updateOperators: [PLUS_CODE, MINUS_CODE],\n  assignmentPrecedence: 0.9,\n  init(jsep) {\n    const updateNodeTypes = [jsep.IDENTIFIER, jsep.MEMBER_EXP];\n    plugin.assignmentOperators.forEach(op => jsep.addBinaryOp(op, plugin.assignmentPrecedence, true));\n    jsep.hooks.add('gobble-token', function gobbleUpdatePrefix(env) {\n      const code = this.code;\n      if (plugin.updateOperators.some(c => c === code && c === this.expr.charCodeAt(this.index + 1))) {\n        this.index += 2;\n        env.node = {\n          type: 'UpdateExpression',\n          operator: code === PLUS_CODE ? '++' : '--',\n          argument: this.gobbleTokenProperty(this.gobbleIdentifier()),\n          prefix: true\n        };\n        if (!env.node.argument || !updateNodeTypes.includes(env.node.argument.type)) {\n          this.throwError(`Unexpected ${env.node.operator}`);\n        }\n      }\n    });\n    jsep.hooks.add('after-token', function gobbleUpdatePostfix(env) {\n      if (env.node) {\n        const code = this.code;\n        if (plugin.updateOperators.some(c => c === code && c === this.expr.charCodeAt(this.index + 1))) {\n          if (!updateNodeTypes.includes(env.node.type)) {\n            this.throwError(`Unexpected ${env.node.operator}`);\n          }\n          this.index += 2;\n          env.node = {\n            type: 'UpdateExpression',\n            operator: code === PLUS_CODE ? '++' : '--',\n            argument: env.node,\n            prefix: false\n          };\n        }\n      }\n    });\n    jsep.hooks.add('after-expression', function gobbleAssignment(env) {\n      if (env.node) {\n        // Note: Binaries can be chained in a single expression to respect\n        // operator precedence (i.e. a = b = 1 + 2 + 3)\n        // Update all binary assignment nodes in the tree\n        updateBinariesToAssignments(env.node);\n      }\n    });\n    function updateBinariesToAssignments(node) {\n      if (plugin.assignmentOperators.has(node.operator)) {\n        node.type = 'AssignmentExpression';\n        updateBinariesToAssignments(node.left);\n        updateBinariesToAssignments(node.right);\n      } else if (!node.operator) {\n        Object.values(node).forEach(val => {\n          if (val && typeof val === 'object') {\n            updateBinariesToAssignments(val);\n          }\n        });\n      }\n    }\n  }\n};\n\n/* eslint-disable no-bitwise -- Convenient */\n\n// register plugins\njsep.plugins.register(index, plugin);\njsep.addUnaryOp('typeof');\njsep.addLiteral('null', null);\njsep.addLiteral('undefined', undefined);\nconst SafeEval = {\n  /**\n   * @param {jsep.Expression} ast\n   * @param {Record<string, any>} subs\n   */\n  evalAst(ast, subs) {\n    switch (ast.type) {\n      case 'BinaryExpression':\n      case 'LogicalExpression':\n        return SafeEval.evalBinaryExpression(ast, subs);\n      case 'Compound':\n        return SafeEval.evalCompound(ast, subs);\n      case 'ConditionalExpression':\n        return SafeEval.evalConditionalExpression(ast, subs);\n      case 'Identifier':\n        return SafeEval.evalIdentifier(ast, subs);\n      case 'Literal':\n        return SafeEval.evalLiteral(ast, subs);\n      case 'MemberExpression':\n        return SafeEval.evalMemberExpression(ast, subs);\n      case 'UnaryExpression':\n        return SafeEval.evalUnaryExpression(ast, subs);\n      case 'ArrayExpression':\n        return SafeEval.evalArrayExpression(ast, subs);\n      case 'CallExpression':\n        return SafeEval.evalCallExpression(ast, subs);\n      case 'AssignmentExpression':\n        return SafeEval.evalAssignmentExpression(ast, subs);\n      default:\n        throw SyntaxError('Unexpected expression', ast);\n    }\n  },\n  evalBinaryExpression(ast, subs) {\n    const result = {\n      '||': (a, b) => a || b(),\n      '&&': (a, b) => a && b(),\n      '|': (a, b) => a | b(),\n      '^': (a, b) => a ^ b(),\n      '&': (a, b) => a & b(),\n      // eslint-disable-next-line eqeqeq -- API\n      '==': (a, b) => a == b(),\n      // eslint-disable-next-line eqeqeq -- API\n      '!=': (a, b) => a != b(),\n      '===': (a, b) => a === b(),\n      '!==': (a, b) => a !== b(),\n      '<': (a, b) => a < b(),\n      '>': (a, b) => a > b(),\n      '<=': (a, b) => a <= b(),\n      '>=': (a, b) => a >= b(),\n      '<<': (a, b) => a << b(),\n      '>>': (a, b) => a >> b(),\n      '>>>': (a, b) => a >>> b(),\n      '+': (a, b) => a + b(),\n      '-': (a, b) => a - b(),\n      '*': (a, b) => a * b(),\n      '/': (a, b) => a / b(),\n      '%': (a, b) => a % b()\n    }[ast.operator](SafeEval.evalAst(ast.left, subs), () => SafeEval.evalAst(ast.right, subs));\n    return result;\n  },\n  evalCompound(ast, subs) {\n    let last;\n    for (let i = 0; i < ast.body.length; i++) {\n      if (ast.body[i].type === 'Identifier' && ['var', 'let', 'const'].includes(ast.body[i].name) && ast.body[i + 1] && ast.body[i + 1].type === 'AssignmentExpression') {\n        // var x=2; is detected as\n        // [{Identifier var}, {AssignmentExpression x=2}]\n        // eslint-disable-next-line @stylistic/max-len -- Long\n        // eslint-disable-next-line sonarjs/updated-loop-counter -- Convenient\n        i += 1;\n      }\n      const expr = ast.body[i];\n      last = SafeEval.evalAst(expr, subs);\n    }\n    return last;\n  },\n  evalConditionalExpression(ast, subs) {\n    if (SafeEval.evalAst(ast.test, subs)) {\n      return SafeEval.evalAst(ast.consequent, subs);\n    }\n    return SafeEval.evalAst(ast.alternate, subs);\n  },\n  evalIdentifier(ast, subs) {\n    if (ast.name in subs) {\n      return subs[ast.name];\n    }\n    throw ReferenceError(`${ast.name} is not defined`);\n  },\n  evalLiteral(ast) {\n    return ast.value;\n  },\n  evalMemberExpression(ast, subs) {\n    if (ast.property.type === 'Identifier' && ast.property.name === 'constructor' || ast.object.type === 'Identifier' && ast.object.name === 'constructor') {\n      throw new Error(\"'constructor' property is disabled\");\n    }\n    const prop = ast.computed ? SafeEval.evalAst(ast.property) // `object[property]`\n    : ast.property.name; // `object.property` property is Identifier\n    const obj = SafeEval.evalAst(ast.object, subs);\n    const result = obj[prop];\n    if (typeof result === 'function') {\n      if (obj === Function && prop === 'bind') {\n        throw new Error('Function.prototype.bind is disabled');\n      }\n      if (obj === Function && (prop === 'call' || prop === 'apply')) {\n        throw new Error('Function.prototype.call and ' + 'Function.prototype.apply are disabled');\n      }\n      if (result === Function) {\n        return result; // Don't bind so can identify and throw later\n      }\n      return result.bind(obj); // arrow functions aren't affected by bind.\n    }\n    return result;\n  },\n  evalUnaryExpression(ast, subs) {\n    const result = {\n      '-': a => -SafeEval.evalAst(a, subs),\n      '!': a => !SafeEval.evalAst(a, subs),\n      '~': a => ~SafeEval.evalAst(a, subs),\n      // eslint-disable-next-line no-implicit-coercion -- API\n      '+': a => +SafeEval.evalAst(a, subs),\n      typeof: a => typeof SafeEval.evalAst(a, subs)\n    }[ast.operator](ast.argument);\n    return result;\n  },\n  evalArrayExpression(ast, subs) {\n    return ast.elements.map(el => SafeEval.evalAst(el, subs));\n  },\n  evalCallExpression(ast, subs) {\n    const args = ast.arguments.map(arg => SafeEval.evalAst(arg, subs));\n    const func = SafeEval.evalAst(ast.callee, subs);\n    if (func === Function) {\n      throw new Error('Function constructor is disabled');\n    }\n    return func(...args);\n  },\n  evalAssignmentExpression(ast, subs) {\n    if (ast.left.type !== 'Identifier') {\n      throw SyntaxError('Invalid left-hand side in assignment');\n    }\n    const id = ast.left.name;\n    if (id === '__proto__') {\n      throw new Error('Assignment to __proto__ is disabled');\n    }\n    const value = SafeEval.evalAst(ast.right, subs);\n    subs[id] = value;\n    return subs[id];\n  }\n};\n\n/**\n * A replacement for NodeJS' VM.Script which is also {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP | Content Security Policy} friendly.\n */\nclass SafeScript {\n  /**\n   * @param {string} expr Expression to evaluate\n   */\n  constructor(expr) {\n    this.code = expr;\n    this.ast = jsep(this.code);\n  }\n\n  /**\n   * @param {object} context Object whose items will be added\n   *   to evaluation\n   * @returns {EvaluatedResult} Result of evaluated code\n   */\n  runInNewContext(context) {\n    const keyMap = {\n      ...context\n    };\n    return SafeEval.evalAst(this.ast, keyMap);\n  }\n}\n\n/* eslint-disable camelcase -- Convenient for escaping */\n\n\n/**\n * @typedef {null|boolean|number|string|object|GenericArray} JSONObject\n */\n\n/**\n * @typedef {any} AnyItem\n */\n\n/**\n * @typedef {any} AnyResult\n */\n\n/**\n * Copies array and then pushes item into it.\n * @param {GenericArray} arr Array to copy and into which to push\n * @param {AnyItem} item Array item to add (to end)\n * @returns {GenericArray} Copy of the original array\n */\nfunction push(arr, item) {\n  arr = arr.slice();\n  arr.push(item);\n  return arr;\n}\n/**\n * Copies array and then unshifts item into it.\n * @param {AnyItem} item Array item to add (to beginning)\n * @param {GenericArray} arr Array to copy and into which to unshift\n * @returns {GenericArray} Copy of the original array\n */\nfunction unshift(item, arr) {\n  arr = arr.slice();\n  arr.unshift(item);\n  return arr;\n}\n\n/**\n * Caught when JSONPath is used without `new` but rethrown if with `new`\n * @extends Error\n */\nclass NewError extends Error {\n  /**\n   * @param {AnyResult} value The evaluated scalar value\n   */\n  constructor(value) {\n    super('JSONPath should not be called with \"new\" (it prevents return ' + 'of (unwrapped) scalar values)');\n    this.avoidNew = true;\n    this.value = value;\n    this.name = 'NewError';\n  }\n}\n\n/**\n* @typedef {object} ReturnObject\n* @property {string} path\n* @property {JSONObject} value\n* @property {object|GenericArray} parent\n* @property {string} parentProperty\n*/\n\n/**\n* @callback JSONPathCallback\n* @param {string|object} preferredOutput\n* @param {\"value\"|\"property\"} type\n* @param {ReturnObject} fullRetObj\n* @returns {void}\n*/\n\n/**\n* @callback OtherTypeCallback\n* @param {JSONObject} val\n* @param {string} path\n* @param {object|GenericArray} parent\n* @param {string} parentPropName\n* @returns {boolean}\n*/\n\n/**\n * @typedef {any} ContextItem\n */\n\n/**\n * @typedef {any} EvaluatedResult\n */\n\n/**\n* @callback EvalCallback\n* @param {string} code\n* @param {ContextItem} context\n* @returns {EvaluatedResult}\n*/\n\n/**\n * @typedef {typeof SafeScript} EvalClass\n */\n\n/**\n * @typedef {object} JSONPathOptions\n * @property {JSON} json\n * @property {string|string[]} path\n * @property {\"value\"|\"path\"|\"pointer\"|\"parent\"|\"parentProperty\"|\n *   \"all\"} [resultType=\"value\"]\n * @property {boolean} [flatten=false]\n * @property {boolean} [wrap=true]\n * @property {object} [sandbox={}]\n * @property {EvalCallback|EvalClass|'safe'|'native'|\n *   boolean} [eval = 'safe']\n * @property {object|GenericArray|null} [parent=null]\n * @property {string|null} [parentProperty=null]\n * @property {JSONPathCallback} [callback]\n * @property {OtherTypeCallback} [otherTypeCallback] Defaults to\n *   function which throws on encountering `@other`\n * @property {boolean} [autostart=true]\n */\n\n/**\n * @param {string|JSONPathOptions} opts If a string, will be treated as `expr`\n * @param {string} [expr] JSON path to evaluate\n * @param {JSON} [obj] JSON object to evaluate against\n * @param {JSONPathCallback} [callback] Passed 3 arguments: 1) desired payload\n *     per `resultType`, 2) `\"value\"|\"property\"`, 3) Full returned object with\n *     all payloads\n * @param {OtherTypeCallback} [otherTypeCallback] If `@other()` is at the end\n *   of one's query, this will be invoked with the value of the item, its\n *   path, its parent, and its parent's property name, and it should return\n *   a boolean indicating whether the supplied value belongs to the \"other\"\n *   type or not (or it may handle transformations and return `false`).\n * @returns {JSONPath}\n * @class\n */\nfunction JSONPath(opts, expr, obj, callback, otherTypeCallback) {\n  // eslint-disable-next-line no-restricted-syntax -- Allow for pseudo-class\n  if (!(this instanceof JSONPath)) {\n    try {\n      return new JSONPath(opts, expr, obj, callback, otherTypeCallback);\n    } catch (e) {\n      if (!e.avoidNew) {\n        throw e;\n      }\n      return e.value;\n    }\n  }\n  if (typeof opts === 'string') {\n    otherTypeCallback = callback;\n    callback = obj;\n    obj = expr;\n    expr = opts;\n    opts = null;\n  }\n  const optObj = opts && typeof opts === 'object';\n  opts = opts || {};\n  this.json = opts.json || obj;\n  this.path = opts.path || expr;\n  this.resultType = opts.resultType || 'value';\n  this.flatten = opts.flatten || false;\n  this.wrap = Object.hasOwn(opts, 'wrap') ? opts.wrap : true;\n  this.sandbox = opts.sandbox || {};\n  this.eval = opts.eval === undefined ? 'safe' : opts.eval;\n  this.ignoreEvalErrors = typeof opts.ignoreEvalErrors === 'undefined' ? false : opts.ignoreEvalErrors;\n  this.parent = opts.parent || null;\n  this.parentProperty = opts.parentProperty || null;\n  this.callback = opts.callback || callback || null;\n  this.otherTypeCallback = opts.otherTypeCallback || otherTypeCallback || function () {\n    throw new TypeError('You must supply an otherTypeCallback callback option ' + 'with the @other() operator.');\n  };\n  if (opts.autostart !== false) {\n    const args = {\n      path: optObj ? opts.path : expr\n    };\n    if (!optObj) {\n      args.json = obj;\n    } else if ('json' in opts) {\n      args.json = opts.json;\n    }\n    const ret = this.evaluate(args);\n    if (!ret || typeof ret !== 'object') {\n      throw new NewError(ret);\n    }\n    return ret;\n  }\n}\n\n// PUBLIC METHODS\nJSONPath.prototype.evaluate = function (expr, json, callback, otherTypeCallback) {\n  let currParent = this.parent,\n    currParentProperty = this.parentProperty;\n  let {\n    flatten,\n    wrap\n  } = this;\n  this.currResultType = this.resultType;\n  this.currEval = this.eval;\n  this.currSandbox = this.sandbox;\n  callback = callback || this.callback;\n  this.currOtherTypeCallback = otherTypeCallback || this.otherTypeCallback;\n  json = json || this.json;\n  expr = expr || this.path;\n  if (expr && typeof expr === 'object' && !Array.isArray(expr)) {\n    if (!expr.path && expr.path !== '') {\n      throw new TypeError('You must supply a \"path\" property when providing an object ' + 'argument to JSONPath.evaluate().');\n    }\n    if (!Object.hasOwn(expr, 'json')) {\n      throw new TypeError('You must supply a \"json\" property when providing an object ' + 'argument to JSONPath.evaluate().');\n    }\n    ({\n      json\n    } = expr);\n    flatten = Object.hasOwn(expr, 'flatten') ? expr.flatten : flatten;\n    this.currResultType = Object.hasOwn(expr, 'resultType') ? expr.resultType : this.currResultType;\n    this.currSandbox = Object.hasOwn(expr, 'sandbox') ? expr.sandbox : this.currSandbox;\n    wrap = Object.hasOwn(expr, 'wrap') ? expr.wrap : wrap;\n    this.currEval = Object.hasOwn(expr, 'eval') ? expr.eval : this.currEval;\n    callback = Object.hasOwn(expr, 'callback') ? expr.callback : callback;\n    this.currOtherTypeCallback = Object.hasOwn(expr, 'otherTypeCallback') ? expr.otherTypeCallback : this.currOtherTypeCallback;\n    currParent = Object.hasOwn(expr, 'parent') ? expr.parent : currParent;\n    currParentProperty = Object.hasOwn(expr, 'parentProperty') ? expr.parentProperty : currParentProperty;\n    expr = expr.path;\n  }\n  currParent = currParent || null;\n  currParentProperty = currParentProperty || null;\n  if (Array.isArray(expr)) {\n    expr = JSONPath.toPathString(expr);\n  }\n  if (!expr && expr !== '' || !json) {\n    return undefined;\n  }\n  const exprList = JSONPath.toPathArray(expr);\n  if (exprList[0] === '$' && exprList.length > 1) {\n    exprList.shift();\n  }\n  this._hasParentSelector = null;\n  const result = this._trace(exprList, json, ['$'], currParent, currParentProperty, callback).filter(function (ea) {\n    return ea && !ea.isParentSelector;\n  });\n  if (!result.length) {\n    return wrap ? [] : undefined;\n  }\n  if (!wrap && result.length === 1 && !result[0].hasArrExpr) {\n    return this._getPreferredOutput(result[0]);\n  }\n  return result.reduce((rslt, ea) => {\n    const valOrPath = this._getPreferredOutput(ea);\n    if (flatten && Array.isArray(valOrPath)) {\n      rslt = rslt.concat(valOrPath);\n    } else {\n      rslt.push(valOrPath);\n    }\n    return rslt;\n  }, []);\n};\n\n// PRIVATE METHODS\n\nJSONPath.prototype._getPreferredOutput = function (ea) {\n  const resultType = this.currResultType;\n  switch (resultType) {\n    case 'all':\n      {\n        const path = Array.isArray(ea.path) ? ea.path : JSONPath.toPathArray(ea.path);\n        ea.pointer = JSONPath.toPointer(path);\n        ea.path = typeof ea.path === 'string' ? ea.path : JSONPath.toPathString(ea.path);\n        return ea;\n      }\n    case 'value':\n    case 'parent':\n    case 'parentProperty':\n      return ea[resultType];\n    case 'path':\n      return JSONPath.toPathString(ea[resultType]);\n    case 'pointer':\n      return JSONPath.toPointer(ea.path);\n    default:\n      throw new TypeError('Unknown result type');\n  }\n};\nJSONPath.prototype._handleCallback = function (fullRetObj, callback, type) {\n  if (callback) {\n    const preferredOutput = this._getPreferredOutput(fullRetObj);\n    fullRetObj.path = typeof fullRetObj.path === 'string' ? fullRetObj.path : JSONPath.toPathString(fullRetObj.path);\n    // eslint-disable-next-line n/callback-return -- No need to return\n    callback(preferredOutput, type, fullRetObj);\n  }\n};\n\n/**\n *\n * @param {string} expr\n * @param {JSONObject} val\n * @param {string} path\n * @param {object|GenericArray} parent\n * @param {string} parentPropName\n * @param {JSONPathCallback} callback\n * @param {boolean} hasArrExpr\n * @param {boolean} literalPriority\n * @returns {ReturnObject|ReturnObject[]}\n */\nJSONPath.prototype._trace = function (expr, val, path, parent, parentPropName, callback, hasArrExpr, literalPriority) {\n  // No expr to follow? return path and value as the result of\n  //  this trace branch\n  let retObj;\n  if (!expr.length) {\n    retObj = {\n      path,\n      value: val,\n      parent,\n      parentProperty: parentPropName,\n      hasArrExpr\n    };\n    this._handleCallback(retObj, callback, 'value');\n    return retObj;\n  }\n  const loc = expr[0],\n    x = expr.slice(1);\n\n  // We need to gather the return value of recursive trace calls in order to\n  // do the parent sel computation.\n  const ret = [];\n  /**\n   *\n   * @param {ReturnObject|ReturnObject[]} elems\n   * @returns {void}\n   */\n  function addRet(elems) {\n    if (Array.isArray(elems)) {\n      // This was causing excessive stack size in Node (with or\n      //  without Babel) against our performance test:\n      //  `ret.push(...elems);`\n      elems.forEach(t => {\n        ret.push(t);\n      });\n    } else {\n      ret.push(elems);\n    }\n  }\n  if ((typeof loc !== 'string' || literalPriority) && val && Object.hasOwn(val, loc)) {\n    // simple case--directly follow property\n    addRet(this._trace(x, val[loc], push(path, loc), val, loc, callback, hasArrExpr));\n    // eslint-disable-next-line unicorn/prefer-switch -- Part of larger `if`\n  } else if (loc === '*') {\n    // all child properties\n    this._walk(val, m => {\n      addRet(this._trace(x, val[m], push(path, m), val, m, callback, true, true));\n    });\n  } else if (loc === '..') {\n    // all descendent parent properties\n    // Check remaining expression with val's immediate children\n    addRet(this._trace(x, val, path, parent, parentPropName, callback, hasArrExpr));\n    this._walk(val, m => {\n      // We don't join m and x here because we only want parents,\n      //   not scalar values\n      if (typeof val[m] === 'object') {\n        // Keep going with recursive descent on val's\n        //   object children\n        addRet(this._trace(expr.slice(), val[m], push(path, m), val, m, callback, true));\n      }\n    });\n    // The parent sel computation is handled in the frame above using the\n    // ancestor object of val\n  } else if (loc === '^') {\n    // This is not a final endpoint, so we do not invoke the callback here\n    this._hasParentSelector = true;\n    return {\n      path: path.slice(0, -1),\n      expr: x,\n      isParentSelector: true\n    };\n  } else if (loc === '~') {\n    // property name\n    retObj = {\n      path: push(path, loc),\n      value: parentPropName,\n      parent,\n      parentProperty: null\n    };\n    this._handleCallback(retObj, callback, 'property');\n    return retObj;\n  } else if (loc === '$') {\n    // root only\n    addRet(this._trace(x, val, path, null, null, callback, hasArrExpr));\n  } else if (/^(-?\\d*):(-?\\d*):?(\\d*)$/u.test(loc)) {\n    // [start:end:step]  Python slice syntax\n    addRet(this._slice(loc, x, val, path, parent, parentPropName, callback));\n  } else if (loc.indexOf('?(') === 0) {\n    // [?(expr)] (filtering)\n    if (this.currEval === false) {\n      throw new Error('Eval [?(expr)] prevented in JSONPath expression.');\n    }\n    const safeLoc = loc.replace(/^\\?\\((.*?)\\)$/u, '$1');\n    // check for a nested filter expression\n    const nested = /@.?([^?]*)[['](\\??\\(.*?\\))(?!.\\)\\])[\\]']/gu.exec(safeLoc);\n    if (nested) {\n      // find if there are matches in the nested expression\n      // add them to the result set if there is at least one match\n      this._walk(val, m => {\n        const npath = [nested[2]];\n        const nvalue = nested[1] ? val[m][nested[1]] : val[m];\n        const filterResults = this._trace(npath, nvalue, path, parent, parentPropName, callback, true);\n        if (filterResults.length > 0) {\n          addRet(this._trace(x, val[m], push(path, m), val, m, callback, true));\n        }\n      });\n    } else {\n      this._walk(val, m => {\n        if (this._eval(safeLoc, val[m], m, path, parent, parentPropName)) {\n          addRet(this._trace(x, val[m], push(path, m), val, m, callback, true));\n        }\n      });\n    }\n  } else if (loc[0] === '(') {\n    // [(expr)] (dynamic property/index)\n    if (this.currEval === false) {\n      throw new Error('Eval [(expr)] prevented in JSONPath expression.');\n    }\n    // As this will resolve to a property name (but we don't know it\n    //  yet), property and parent information is relative to the\n    //  parent of the property to which this expression will resolve\n    addRet(this._trace(unshift(this._eval(loc, val, path.at(-1), path.slice(0, -1), parent, parentPropName), x), val, path, parent, parentPropName, callback, hasArrExpr));\n  } else if (loc[0] === '@') {\n    // value type: @boolean(), etc.\n    let addType = false;\n    const valueType = loc.slice(1, -2);\n    switch (valueType) {\n      case 'scalar':\n        if (!val || !['object', 'function'].includes(typeof val)) {\n          addType = true;\n        }\n        break;\n      case 'boolean':\n      case 'string':\n      case 'undefined':\n      case 'function':\n        if (typeof val === valueType) {\n          addType = true;\n        }\n        break;\n      case 'integer':\n        if (Number.isFinite(val) && !(val % 1)) {\n          addType = true;\n        }\n        break;\n      case 'number':\n        if (Number.isFinite(val)) {\n          addType = true;\n        }\n        break;\n      case 'nonFinite':\n        if (typeof val === 'number' && !Number.isFinite(val)) {\n          addType = true;\n        }\n        break;\n      case 'object':\n        if (val && typeof val === valueType) {\n          addType = true;\n        }\n        break;\n      case 'array':\n        if (Array.isArray(val)) {\n          addType = true;\n        }\n        break;\n      case 'other':\n        addType = this.currOtherTypeCallback(val, path, parent, parentPropName);\n        break;\n      case 'null':\n        if (val === null) {\n          addType = true;\n        }\n        break;\n      /* c8 ignore next 2 */\n      default:\n        throw new TypeError('Unknown value type ' + valueType);\n    }\n    if (addType) {\n      retObj = {\n        path,\n        value: val,\n        parent,\n        parentProperty: parentPropName\n      };\n      this._handleCallback(retObj, callback, 'value');\n      return retObj;\n    }\n    // `-escaped property\n  } else if (loc[0] === '`' && val && Object.hasOwn(val, loc.slice(1))) {\n    const locProp = loc.slice(1);\n    addRet(this._trace(x, val[locProp], push(path, locProp), val, locProp, callback, hasArrExpr, true));\n  } else if (loc.includes(',')) {\n    // [name1,name2,...]\n    const parts = loc.split(',');\n    for (const part of parts) {\n      addRet(this._trace(unshift(part, x), val, path, parent, parentPropName, callback, true));\n    }\n    // simple case--directly follow property\n  } else if (!literalPriority && val && Object.hasOwn(val, loc)) {\n    addRet(this._trace(x, val[loc], push(path, loc), val, loc, callback, hasArrExpr, true));\n  }\n\n  // We check the resulting values for parent selections. For parent\n  // selections we discard the value object and continue the trace with the\n  // current val object\n  if (this._hasParentSelector) {\n    for (let t = 0; t < ret.length; t++) {\n      const rett = ret[t];\n      if (rett && rett.isParentSelector) {\n        const tmp = this._trace(rett.expr, val, rett.path, parent, parentPropName, callback, hasArrExpr);\n        if (Array.isArray(tmp)) {\n          ret[t] = tmp[0];\n          const tl = tmp.length;\n          for (let tt = 1; tt < tl; tt++) {\n            // eslint-disable-next-line @stylistic/max-len -- Long\n            // eslint-disable-next-line sonarjs/updated-loop-counter -- Convenient\n            t++;\n            ret.splice(t, 0, tmp[tt]);\n          }\n        } else {\n          ret[t] = tmp;\n        }\n      }\n    }\n  }\n  return ret;\n};\nJSONPath.prototype._walk = function (val, f) {\n  if (Array.isArray(val)) {\n    const n = val.length;\n    for (let i = 0; i < n; i++) {\n      f(i);\n    }\n  } else if (val && typeof val === 'object') {\n    Object.keys(val).forEach(m => {\n      f(m);\n    });\n  }\n};\nJSONPath.prototype._slice = function (loc, expr, val, path, parent, parentPropName, callback) {\n  if (!Array.isArray(val)) {\n    return undefined;\n  }\n  const len = val.length,\n    parts = loc.split(':'),\n    step = parts[2] && Number.parseInt(parts[2]) || 1;\n  let start = parts[0] && Number.parseInt(parts[0]) || 0,\n    end = parts[1] && Number.parseInt(parts[1]) || len;\n  start = start < 0 ? Math.max(0, start + len) : Math.min(len, start);\n  end = end < 0 ? Math.max(0, end + len) : Math.min(len, end);\n  const ret = [];\n  for (let i = start; i < end; i += step) {\n    const tmp = this._trace(unshift(i, expr), val, path, parent, parentPropName, callback, true);\n    // Should only be possible to be an array here since first part of\n    //   ``unshift(i, expr)` passed in above would not be empty, nor `~`,\n    //     nor begin with `@` (as could return objects)\n    // This was causing excessive stack size in Node (with or\n    //  without Babel) against our performance test: `ret.push(...tmp);`\n    tmp.forEach(t => {\n      ret.push(t);\n    });\n  }\n  return ret;\n};\nJSONPath.prototype._eval = function (code, _v, _vname, path, parent, parentPropName) {\n  this.currSandbox._$_parentProperty = parentPropName;\n  this.currSandbox._$_parent = parent;\n  this.currSandbox._$_property = _vname;\n  this.currSandbox._$_root = this.json;\n  this.currSandbox._$_v = _v;\n  const containsPath = code.includes('@path');\n  if (containsPath) {\n    this.currSandbox._$_path = JSONPath.toPathString(path.concat([_vname]));\n  }\n  const scriptCacheKey = this.currEval + 'Script:' + code;\n  if (!JSONPath.cache[scriptCacheKey]) {\n    let script = code.replaceAll('@parentProperty', '_$_parentProperty').replaceAll('@parent', '_$_parent').replaceAll('@property', '_$_property').replaceAll('@root', '_$_root').replaceAll(/@([.\\s)[])/gu, '_$_v$1');\n    if (containsPath) {\n      script = script.replaceAll('@path', '_$_path');\n    }\n    if (this.currEval === 'safe' || this.currEval === true || this.currEval === undefined) {\n      JSONPath.cache[scriptCacheKey] = new this.safeVm.Script(script);\n    } else if (this.currEval === 'native') {\n      JSONPath.cache[scriptCacheKey] = new this.vm.Script(script);\n    } else if (typeof this.currEval === 'function' && this.currEval.prototype && Object.hasOwn(this.currEval.prototype, 'runInNewContext')) {\n      const CurrEval = this.currEval;\n      JSONPath.cache[scriptCacheKey] = new CurrEval(script);\n    } else if (typeof this.currEval === 'function') {\n      JSONPath.cache[scriptCacheKey] = {\n        runInNewContext: context => this.currEval(script, context)\n      };\n    } else {\n      throw new TypeError(`Unknown \"eval\" property \"${this.currEval}\"`);\n    }\n  }\n  try {\n    return JSONPath.cache[scriptCacheKey].runInNewContext(this.currSandbox);\n  } catch (e) {\n    if (this.ignoreEvalErrors) {\n      return false;\n    }\n    throw new Error('jsonPath: ' + e.message + ': ' + code);\n  }\n};\n\n// PUBLIC CLASS PROPERTIES AND METHODS\n\n// Could store the cache object itself\nJSONPath.cache = {};\n\n/**\n * @param {string[]} pathArr Array to convert\n * @returns {string} The path string\n */\nJSONPath.toPathString = function (pathArr) {\n  const x = pathArr,\n    n = x.length;\n  let p = '$';\n  for (let i = 1; i < n; i++) {\n    if (!/^(~|\\^|@.*?\\(\\))$/u.test(x[i])) {\n      p += /^[0-9*]+$/u.test(x[i]) ? '[' + x[i] + ']' : \"['\" + x[i] + \"']\";\n    }\n  }\n  return p;\n};\n\n/**\n * @param {string} pointer JSON Path\n * @returns {string} JSON Pointer\n */\nJSONPath.toPointer = function (pointer) {\n  const x = pointer,\n    n = x.length;\n  let p = '';\n  for (let i = 1; i < n; i++) {\n    if (!/^(~|\\^|@.*?\\(\\))$/u.test(x[i])) {\n      p += '/' + x[i].toString().replaceAll('~', '~0').replaceAll('/', '~1');\n    }\n  }\n  return p;\n};\n\n/**\n * @param {string} expr Expression to convert\n * @returns {string[]}\n */\nJSONPath.toPathArray = function (expr) {\n  const {\n    cache\n  } = JSONPath;\n  if (cache[expr]) {\n    return cache[expr].concat();\n  }\n  const subx = [];\n  const normalized = expr\n  // Properties\n  .replaceAll(/@(?:null|boolean|number|string|integer|undefined|nonFinite|scalar|array|object|function|other)\\(\\)/gu, ';$&;')\n  // Parenthetical evaluations (filtering and otherwise), directly\n  //   within brackets or single quotes\n  .replaceAll(/[['](\\??\\(.*?\\))[\\]'](?!.\\])/gu, function ($0, $1) {\n    return '[#' + (subx.push($1) - 1) + ']';\n  })\n  // Escape periods and tildes within properties\n  .replaceAll(/\\[['\"]([^'\\]]*)['\"]\\]/gu, function ($0, prop) {\n    return \"['\" + prop.replaceAll('.', '%@%').replaceAll('~', '%%@@%%') + \"']\";\n  })\n  // Properties operator\n  .replaceAll('~', ';~;')\n  // Split by property boundaries\n  .replaceAll(/['\"]?\\.['\"]?(?![^[]*\\])|\\[['\"]?/gu, ';')\n  // Reinsert periods within properties\n  .replaceAll('%@%', '.')\n  // Reinsert tildes within properties\n  .replaceAll('%%@@%%', '~')\n  // Parent\n  .replaceAll(/(?:;)?(\\^+)(?:;)?/gu, function ($0, ups) {\n    return ';' + ups.split('').join(';') + ';';\n  })\n  // Descendents\n  .replaceAll(/;;;|;;/gu, ';..;')\n  // Remove trailing\n  .replaceAll(/;$|'?\\]|'$/gu, '');\n  const exprList = normalized.split(';').map(function (exp) {\n    const match = exp.match(/#(\\d+)/u);\n    return !match || !match[1] ? exp : subx[match[1]];\n  });\n  cache[expr] = exprList;\n  return cache[expr].concat();\n};\nJSONPath.prototype.safeVm = {\n  Script: SafeScript\n};\n\nJSONPath.prototype.vm = vm;\n\nexport { JSONPath };\n", "'use strict'\n\nimport Fact from './fact'\nimport { UndefinedFactError } from './errors'\nimport debug from './debug'\n\nimport { JSONPath } from 'jsonpath-plus'\n\nfunction defaultPathResolver (value, path) {\n  return JSONPath({ path, json: value, wrap: false })\n}\n\n/**\n * Fact results lookup\n * Triggers fact computations and saves the results\n * A new almanac is used for every engine run()\n */\nexport default class Almanac {\n  constructor (options = {}) {\n    this.factMap = new Map()\n    this.factResultsCache = new Map() // { cacheKey:  Promise<factValu> }\n    this.allowUndefinedFacts = Boolean(options.allowUndefinedFacts)\n    this.pathResolver = options.pathResolver || defaultPathResolver\n    this.events = { success: [], failure: [] }\n    this.ruleResults = []\n  }\n\n  /**\n   * Adds a success event\n   * @param {Object} event\n   */\n  addEvent (event, outcome) {\n    if (!outcome) throw new Error('outcome required: \"success\" | \"failure\"]')\n    this.events[outcome].push(event)\n  }\n\n  /**\n   * retrieve successful events\n   */\n  getEvents (outcome = '') {\n    if (outcome) return this.events[outcome]\n    return this.events.success.concat(this.events.failure)\n  }\n\n  /**\n   * Adds a rule result\n   * @param {Object} event\n   */\n  addResult (ruleResult) {\n    this.ruleResults.push(ruleResult)\n  }\n\n  /**\n   * retrieve successful events\n   */\n  getResults () {\n    return this.ruleResults\n  }\n\n  /**\n   * Retrieve fact by id, raising an exception if it DNE\n   * @param  {String} factId\n   * @return {Fact}\n   */\n  _getFact (factId) {\n    return this.factMap.get(factId)\n  }\n\n  /**\n   * Registers fact with the almanac\n   * @param {[type]} fact [description]\n   */\n  _addConstantFact (fact) {\n    this.factMap.set(fact.id, fact)\n    this._setFactValue(fact, {}, fact.value)\n  }\n\n  /**\n   * Sets the computed value of a fact\n   * @param {Fact} fact\n   * @param {Object} params - values for differentiating this fact value from others, used for cache key\n   * @param {Mixed} value - computed value\n   */\n  _setFactValue (fact, params, value) {\n    const cacheKey = fact.getCacheKey(params)\n    const factValue = Promise.resolve(value)\n    if (cacheKey) {\n      this.factResultsCache.set(cacheKey, factValue)\n    }\n    return factValue\n  }\n\n  /**\n   * Add a fact definition to the engine.  Facts are called by rules as they are evaluated.\n   * @param {object|Fact} id - fact identifier or instance of Fact\n   * @param {function} definitionFunc - function to be called when computing the fact value for a given rule\n   * @param {Object} options - options to initialize the fact with. used when \"id\" is not a Fact instance\n   */\n  addFact (id, valueOrMethod, options) {\n    let factId = id\n    let fact\n    if (id instanceof Fact) {\n      factId = id.id\n      fact = id\n    } else {\n      fact = new Fact(id, valueOrMethod, options)\n    }\n    debug('almanac::addFact', { id: factId })\n    this.factMap.set(factId, fact)\n    if (fact.isConstant()) {\n      this._setFactValue(fact, {}, fact.value)\n    }\n    return this\n  }\n\n  /**\n   * Adds a constant fact during runtime.  Can be used mid-run() to add additional information\n   * @deprecated use addFact\n   * @param {String} fact - fact identifier\n   * @param {Mixed} value - constant value of the fact\n   */\n  addRuntimeFact (factId, value) {\n    debug('almanac::addRuntimeFact', { id: factId })\n    const fact = new Fact(factId, value)\n    return this._addConstantFact(fact)\n  }\n\n  /**\n   * Returns the value of a fact, based on the given parameters.  Utilizes the 'almanac' maintained\n   * by the engine, which cache's fact computations based on parameters provided\n   * @param  {string} factId - fact identifier\n   * @param  {Object} params - parameters to feed into the fact.  By default, these will also be used to compute the cache key\n   * @param  {String} path - object\n   * @return {Promise} a promise which will resolve with the fact computation.\n   */\n  factValue (factId, params = {}, path = '') {\n    let factValuePromise\n    const fact = this._getFact(factId)\n    if (fact === undefined) {\n      if (this.allowUndefinedFacts) {\n        return Promise.resolve(undefined)\n      } else {\n        return Promise.reject(new UndefinedFactError(`Undefined fact: ${factId}`))\n      }\n    }\n    if (fact.isConstant()) {\n      factValuePromise = Promise.resolve(fact.calculate(params, this))\n    } else {\n      const cacheKey = fact.getCacheKey(params)\n      const cacheVal = cacheKey && this.factResultsCache.get(cacheKey)\n      if (cacheVal) {\n        factValuePromise = Promise.resolve(cacheVal)\n        debug('almanac::factValue cache hit for fact', { id: factId })\n      } else {\n        debug('almanac::factValue cache miss, calculating', { id: factId })\n        factValuePromise = this._setFactValue(fact, params, fact.calculate(params, this))\n      }\n    }\n    if (path) {\n      debug('condition::evaluate extracting object', { property: path })\n      return factValuePromise\n        .then(factValue => {\n          if (factValue != null && typeof factValue === 'object') {\n            const pathValue = this.pathResolver(factValue, path)\n            debug('condition::evaluate extracting object', { property: path, received: pathValue })\n            return pathValue\n          } else {\n            debug('condition::evaluate could not compute object path of non-object', { path, factValue, type: typeof factValue })\n            return factValue\n          }\n        })\n    }\n\n    return factValuePromise\n  }\n\n  /**\n   * Interprets value as either a primitive, or if a fact, retrieves the fact value\n   */\n  getValue (value) {\n    if (value != null && typeof value === 'object' && Object.prototype.hasOwnProperty.call(value, 'fact')) { // value = { fact: 'xyz' }\n      return this.factValue(value.fact, value.params, value.path)\n    }\n    return Promise.resolve(value)\n  }\n}\n", "'use strict'\n\nexport default class Operator {\n  /**\n   * Constructor\n   * @param {string}   name - operator identifier\n   * @param {function(factValue, jsonValue)} callback - operator evaluation method\n   * @param {function}  [factValueValidator] - optional validator for asserting the data type of the fact\n   * @returns {Operator} - instance\n   */\n  constructor (name, cb, factValueValidator) {\n    this.name = String(name)\n    if (!name) throw new Error('Missing operator name')\n    if (typeof cb !== 'function') throw new Error('Missing operator callback')\n    this.cb = cb\n    this.factValueValidator = factValueValidator\n    if (!this.factValueValidator) this.factValueValidator = () => true\n  }\n\n  /**\n   * Takes the fact result and compares it to the condition 'value', using the callback\n   * @param   {mixed} factValue - fact result\n   * @param   {mixed} jsonValue - \"value\" property of the condition\n   * @returns {Boolean} - whether the values pass the operator test\n   */\n  evaluate (factValue, jsonValue) {\n    return this.factValueValidator(factValue) && this.cb(factValue, jsonValue)\n  }\n}\n", "'use strict'\n\nimport Operator from './operator'\n\nconst Operators = []\nOperators.push(new Operator('equal', (a, b) => a === b))\nOperators.push(new Operator('notEqual', (a, b) => a !== b))\nOperators.push(new Operator('in', (a, b) => b.indexOf(a) > -1))\nOperators.push(new Operator('notIn', (a, b) => b.indexOf(a) === -1))\n\nOperators.push(new Operator('contains', (a, b) => a.indexOf(b) > -1, Array.isArray))\nOperators.push(new Operator('doesNotContain', (a, b) => a.indexOf(b) === -1, Array.isArray))\n\nfunction numberValidator (factValue) {\n  return Number.parseFloat(factValue).toString() !== 'NaN'\n}\nOperators.push(new Operator('lessThan', (a, b) => a < b, numberValidator))\nOperators.push(new Operator('lessThanInclusive', (a, b) => a <= b, numberValidator))\nOperators.push(new Operator('greaterThan', (a, b) => a > b, numberValidator))\nOperators.push(new Operator('greaterThanInclusive', (a, b) => a >= b, numberValidator))\n\nexport default Operators\n", "'use strict'\n\nimport Operator from './operator'\n\nexport default class OperatorDecorator {\n  /**\n   * Constructor\n   * @param {string}   name - decorator identifier\n   * @param {function(factValue, jsonValue, next)} callback - callback that takes the next operator as a parameter\n   * @param {function}  [factValueValidator] - optional validator for asserting the data type of the fact\n   * @returns {OperatorDecorator} - instance\n   */\n  constructor (name, cb, factValueValidator) {\n    this.name = String(name)\n    if (!name) throw new Error('Missing decorator name')\n    if (typeof cb !== 'function') throw new Error('Missing decorator callback')\n    this.cb = cb\n    this.factValueValidator = factValueValidator\n    if (!this.factValueValidator) this.factValueValidator = () => true\n  }\n\n  /**\n   * Takes the fact result and compares it to the condition 'value', using the callback\n   * @param   {Operator} operator - fact result\n   * @returns {Operator} - whether the values pass the operator test\n   */\n  decorate (operator) {\n    const next = operator.evaluate.bind(operator)\n    return new Operator(\n        `${this.name}:${operator.name}`,\n        (factValue, jsonValue) => {\n          return this.cb(factValue, jsonValue, next)\n        },\n        this.factValueValidator\n    )\n  }\n}\n", "'use strict'\n\nimport OperatorDecorator from './operator-decorator'\n\nconst OperatorDecorators = []\n\nOperatorDecorators.push(new OperatorDecorator('someFact', (factValue, jsonValue, next) => factValue.some(fv => next(fv, jsonValue)), Array.isArray))\nOperatorDecorators.push(new OperatorDecorator('someValue', (factValue, jsonValue, next) => jsonValue.some(jv => next(factValue, jv))))\nOperatorDecorators.push(new OperatorDecorator('everyFact', (factValue, jsonValue, next) => factValue.every(fv => next(fv, jsonValue)), Array.isArray))\nOperatorDecorators.push(new OperatorDecorator('everyValue', (factValue, jsonValue, next) => jsonValue.every(jv => next(factValue, jv))))\nOperatorDecorators.push(new OperatorDecorator('swap', (factValue, jsonValue, next) => next(jsonValue, factValue)))\nOperatorDecorators.push(new OperatorDecorator('not', (factValue, jsonValue, next) => !next(factValue, jsonValue)))\n\nexport default OperatorDecorators\n", "'use strict'\n\nimport Operator from './operator'\nimport OperatorDecorator from './operator-decorator'\nimport debug from './debug'\n\nexport default class OperatorMap {\n  constructor () {\n    this.operators = new Map()\n    this.decorators = new Map()\n  }\n\n  /**\n     * Add a custom operator definition\n     * @param {string}   operatorOrName - operator identifier within the condition; i.e. instead of 'equals', 'greaterThan', etc\n     * @param {function(factValue, jsonValue)} callback - the method to execute when the operator is encountered.\n     */\n  addOperator (operatorOrName, cb) {\n    let operator\n    if (operatorOrName instanceof Operator) {\n      operator = operatorOrName\n    } else {\n      operator = new Operator(operatorOrName, cb)\n    }\n    debug('operatorMap::addOperator', { name: operator.name })\n    this.operators.set(operator.name, operator)\n  }\n\n  /**\n     * Remove a custom operator definition\n     * @param {string}   operatorOrName - operator identifier within the condition; i.e. instead of 'equals', 'greaterThan', etc\n     * @param {function(factValue, jsonValue)} callback - the method to execute when the operator is encountered.\n     */\n  removeOperator (operatorOrName) {\n    let operatorName\n    if (operatorOrName instanceof Operator) {\n      operatorName = operatorOrName.name\n    } else {\n      operatorName = operatorOrName\n    }\n\n    // Delete all the operators that end in :operatorName these\n    // were decorated on-the-fly leveraging this operator\n    const suffix = ':' + operatorName\n    const operatorNames = Array.from(this.operators.keys())\n    for (let i = 0; i < operatorNames.length; i++) {\n      if (operatorNames[i].endsWith(suffix)) {\n        this.operators.delete(operatorNames[i])\n      }\n    }\n\n    return this.operators.delete(operatorName)\n  }\n\n  /**\n     * Add a custom operator decorator\n     * @param {string}   decoratorOrName - decorator identifier within the condition; i.e. instead of 'everyFact', 'someValue', etc\n     * @param {function(factValue, jsonValue, next)} callback - the method to execute when the decorator is encountered.\n     */\n  addOperatorDecorator (decoratorOrName, cb) {\n    let decorator\n    if (decoratorOrName instanceof OperatorDecorator) {\n      decorator = decoratorOrName\n    } else {\n      decorator = new OperatorDecorator(decoratorOrName, cb)\n    }\n    debug('operatorMap::addOperatorDecorator', { name: decorator.name })\n    this.decorators.set(decorator.name, decorator)\n  }\n\n  /**\n     * Remove a custom operator decorator\n     * @param {string}   decoratorOrName - decorator identifier within the condition; i.e. instead of 'everyFact', 'someValue', etc\n     */\n  removeOperatorDecorator (decoratorOrName) {\n    let decoratorName\n    if (decoratorOrName instanceof OperatorDecorator) {\n      decoratorName = decoratorOrName.name\n    } else {\n      decoratorName = decoratorOrName\n    }\n\n    // Delete all the operators that include decoratorName: these\n    // were decorated on-the-fly leveraging this decorator\n    const prefix = decoratorName + ':'\n    const operatorNames = Array.from(this.operators.keys())\n    for (let i = 0; i < operatorNames.length; i++) {\n      if (operatorNames[i].includes(prefix)) {\n        this.operators.delete(operatorNames[i])\n      }\n    }\n\n    return this.decorators.delete(decoratorName)\n  }\n\n  /**\n   * Get the Operator, or null applies decorators as needed\n   * @param {string} name - the name of the operator including any decorators\n   * @returns an operator or null\n   */\n  get (name) {\n    const decorators = []\n    let opName = name\n    // while we don't already have this operator\n    while (!this.operators.has(opName)) {\n      // try splitting on the decorator symbol (:)\n      const firstDecoratorIndex = opName.indexOf(':')\n      if (firstDecoratorIndex > 0) {\n        // if there is a decorator, and it's a valid decorator\n        const decoratorName = opName.slice(0, firstDecoratorIndex)\n        const decorator = this.decorators.get(decoratorName)\n        if (!decorator) {\n          debug('operatorMap::get invalid decorator', { name: decoratorName })\n          return null\n        }\n        // we're going to apply this later, use unshift since we'll apply in reverse order\n        decorators.unshift(decorator)\n        // continue looking for a known operator with the rest of the name\n        opName = opName.slice(firstDecoratorIndex + 1)\n      } else {\n        debug('operatorMap::get no operator', { name: opName })\n        return null\n      }\n    }\n\n    let op = this.operators.get(opName)\n    // apply all the decorators\n    for (let i = 0; i < decorators.length; i++) {\n      op = decorators[i].decorate(op)\n      // create an entry for the decorated operation so we don't need\n      // to do this again\n      this.operators.set(op.name, op)\n    }\n    // return the operation\n    return op\n  }\n}\n", "'use strict'\n\nimport Fact from './fact'\nimport Rule from './rule'\nimport Almanac from './almanac'\nimport EventEmitter from 'eventemitter2'\nimport defaultOperators from './engine-default-operators'\nimport defaultDecorators from './engine-default-operator-decorators'\nimport debug from './debug'\nimport Condition from './condition'\nimport OperatorMap from './operator-map'\n\nexport const READY = 'READY'\nexport const RUNNING = 'RUNNING'\nexport const FINISHED = 'FINISHED'\n\nclass Engine extends EventEmitter {\n  /**\n   * Returns a new Engine instance\n   * @param  {Rule[]} rules - array of rules to initialize with\n   */\n  constructor (rules = [], options = {}) {\n    super()\n    this.rules = []\n    this.allowUndefinedFacts = options.allowUndefinedFacts || false\n    this.allowUndefinedConditions = options.allowUndefinedConditions || false\n    this.replaceFactsInEventParams = options.replaceFactsInEventParams || false\n    this.pathResolver = options.pathResolver\n    this.operators = new OperatorMap()\n    this.facts = new Map()\n    this.conditions = new Map()\n    this.status = READY\n    rules.map(r => this.addRule(r))\n    defaultOperators.map(o => this.addOperator(o))\n    defaultDecorators.map(d => this.addOperatorDecorator(d))\n  }\n\n  /**\n   * Add a rule definition to the engine\n   * @param {object|Rule} properties - rule definition.  can be JSON representation, or instance of Rule\n   * @param {integer} properties.priority (>1) - higher runs sooner.\n   * @param {Object} properties.event - event to fire when rule evaluates as successful\n   * @param {string} properties.event.type - name of event to emit\n   * @param {string} properties.event.params - parameters to pass to the event listener\n   * @param {Object} properties.conditions - conditions to evaluate when processing this rule\n   */\n  addRule (properties) {\n    if (!properties) throw new Error('Engine: addRule() requires options')\n\n    let rule\n    if (properties instanceof Rule) {\n      rule = properties\n    } else {\n      if (!Object.prototype.hasOwnProperty.call(properties, 'event')) throw new Error('Engine: addRule() argument requires \"event\" property')\n      if (!Object.prototype.hasOwnProperty.call(properties, 'conditions')) throw new Error('Engine: addRule() argument requires \"conditions\" property')\n      rule = new Rule(properties)\n    }\n    rule.setEngine(this)\n    this.rules.push(rule)\n    this.prioritizedRules = null\n    return this\n  }\n\n  /**\n   * update a rule in the engine\n   * @param {object|Rule} rule - rule definition. Must be a instance of Rule\n   */\n  updateRule (rule) {\n    const ruleIndex = this.rules.findIndex(ruleInEngine => ruleInEngine.name === rule.name)\n    if (ruleIndex > -1) {\n      this.rules.splice(ruleIndex, 1)\n      this.addRule(rule)\n      this.prioritizedRules = null\n    } else {\n      throw new Error('Engine: updateRule() rule not found')\n    }\n  }\n\n  /**\n   * Remove a rule from the engine\n   * @param {object|Rule|string} rule - rule definition. Must be a instance of Rule\n   */\n  removeRule (rule) {\n    let ruleRemoved = false\n    if (!(rule instanceof Rule)) {\n      const filteredRules = this.rules.filter(ruleInEngine => ruleInEngine.name !== rule)\n      ruleRemoved = filteredRules.length !== this.rules.length\n      this.rules = filteredRules\n    } else {\n      const index = this.rules.indexOf(rule)\n      if (index > -1) {\n        ruleRemoved = Boolean(this.rules.splice(index, 1).length)\n      }\n    }\n    if (ruleRemoved) {\n      this.prioritizedRules = null\n    }\n    return ruleRemoved\n  }\n\n  /**\n   * sets a condition that can be referenced by the given name.\n   * If a condition with the given name has already been set this will replace it.\n   * @param {string} name - the name of the condition to be referenced by rules.\n   * @param {object} conditions - the conditions to use when the condition is referenced.\n   */\n  setCondition (name, conditions) {\n    if (!name) throw new Error('Engine: setCondition() requires name')\n    if (!conditions) throw new Error('Engine: setCondition() requires conditions')\n    if (!Object.prototype.hasOwnProperty.call(conditions, 'all') && !Object.prototype.hasOwnProperty.call(conditions, 'any') && !Object.prototype.hasOwnProperty.call(conditions, 'not') && !Object.prototype.hasOwnProperty.call(conditions, 'condition')) {\n      throw new Error('\"conditions\" root must contain a single instance of \"all\", \"any\", \"not\", or \"condition\"')\n    }\n    this.conditions.set(name, new Condition(conditions))\n    return this\n  }\n\n  /**\n   * Removes a condition that has previously been added to this engine\n   * @param {string} name - the name of the condition to remove.\n   * @returns true if the condition existed, otherwise false\n   */\n  removeCondition (name) {\n    return this.conditions.delete(name)\n  }\n\n  /**\n   * Add a custom operator definition\n   * @param {string}   operatorOrName - operator identifier within the condition; i.e. instead of 'equals', 'greaterThan', etc\n   * @param {function(factValue, jsonValue)} callback - the method to execute when the operator is encountered.\n   */\n  addOperator (operatorOrName, cb) {\n    this.operators.addOperator(operatorOrName, cb)\n  }\n\n  /**\n   * Remove a custom operator definition\n   * @param {string}   operatorOrName - operator identifier within the condition; i.e. instead of 'equals', 'greaterThan', etc\n   */\n  removeOperator (operatorOrName) {\n    return this.operators.removeOperator(operatorOrName)\n  }\n\n  /**\n   * Add a custom operator decorator\n   * @param {string}   decoratorOrName - decorator identifier within the condition; i.e. instead of 'someFact', 'everyValue', etc\n   * @param {function(factValue, jsonValue, next)} callback - the method to execute when the decorator is encountered.\n   */\n  addOperatorDecorator (decoratorOrName, cb) {\n    this.operators.addOperatorDecorator(decoratorOrName, cb)\n  }\n\n  /**\n   * Remove a custom operator decorator\n   * @param {string}   decoratorOrName - decorator identifier within the condition; i.e. instead of 'someFact', 'everyValue', etc\n   */\n  removeOperatorDecorator (decoratorOrName) {\n    return this.operators.removeOperatorDecorator(decoratorOrName)\n  }\n\n  /**\n   * Add a fact definition to the engine.  Facts are called by rules as they are evaluated.\n   * @param {object|Fact} id - fact identifier or instance of Fact\n   * @param {function} definitionFunc - function to be called when computing the fact value for a given rule\n   * @param {Object} options - options to initialize the fact with. used when \"id\" is not a Fact instance\n   */\n  addFact (id, valueOrMethod, options) {\n    let factId = id\n    let fact\n    if (id instanceof Fact) {\n      factId = id.id\n      fact = id\n    } else {\n      fact = new Fact(id, valueOrMethod, options)\n    }\n    debug('engine::addFact', { id: factId })\n    this.facts.set(factId, fact)\n    return this\n  }\n\n  /**\n   * Remove a fact definition to the engine.  Facts are called by rules as they are evaluated.\n   * @param {object|Fact} id - fact identifier or instance of Fact\n   */\n  removeFact (factOrId) {\n    let factId\n    if (!(factOrId instanceof Fact)) {\n      factId = factOrId\n    } else {\n      factId = factOrId.id\n    }\n\n    return this.facts.delete(factId)\n  }\n\n  /**\n   * Iterates over the engine rules, organizing them by highest -> lowest priority\n   * @return {Rule[][]} two dimensional array of Rules.\n   *    Each outer array element represents a single priority(integer).  Inner array is\n   *    all rules with that priority.\n   */\n  prioritizeRules () {\n    if (!this.prioritizedRules) {\n      const ruleSets = this.rules.reduce((sets, rule) => {\n        const priority = rule.priority\n        if (!sets[priority]) sets[priority] = []\n        sets[priority].push(rule)\n        return sets\n      }, {})\n      this.prioritizedRules = Object.keys(ruleSets).sort((a, b) => {\n        return Number(a) > Number(b) ? -1 : 1 // order highest priority -> lowest\n      }).map((priority) => ruleSets[priority])\n    }\n    return this.prioritizedRules\n  }\n\n  /**\n   * Stops the rules engine from running the next priority set of Rules.  All remaining rules will be resolved as undefined,\n   * and no further events emitted.  Since rules of the same priority are evaluated in parallel(not series), other rules of\n   * the same priority may still emit events, even though the engine is in a \"finished\" state.\n   * @return {Engine}\n   */\n  stop () {\n    this.status = FINISHED\n    return this\n  }\n\n  /**\n   * Returns a fact by fact-id\n   * @param  {string} factId - fact identifier\n   * @return {Fact} fact instance, or undefined if no such fact exists\n   */\n  getFact (factId) {\n    return this.facts.get(factId)\n  }\n\n  /**\n   * Runs an array of rules\n   * @param  {Rule[]} array of rules to be evaluated\n   * @return {Promise} resolves when all rules in the array have been evaluated\n   */\n  evaluateRules (ruleArray, almanac) {\n    return Promise.all(ruleArray.map((rule) => {\n      if (this.status !== RUNNING) {\n        debug('engine::run, skipping remaining rules', { status: this.status })\n        return Promise.resolve()\n      }\n      return rule.evaluate(almanac).then((ruleResult) => {\n        debug('engine::run', { ruleResult: ruleResult.result })\n        almanac.addResult(ruleResult)\n        if (ruleResult.result) {\n          almanac.addEvent(ruleResult.event, 'success')\n          return this.emitAsync('success', ruleResult.event, almanac, ruleResult)\n            .then(() => this.emitAsync(ruleResult.event.type, ruleResult.event.params, almanac, ruleResult))\n        } else {\n          almanac.addEvent(ruleResult.event, 'failure')\n          return this.emitAsync('failure', ruleResult.event, almanac, ruleResult)\n        }\n      })\n    }))\n  }\n\n  /**\n   * Runs the rules engine\n   * @param  {Object} runtimeFacts - fact values known at runtime\n   * @param  {Object} runOptions - run options\n   * @return {Promise} resolves when the engine has completed running\n   */\n  run (runtimeFacts = {}, runOptions = {}) {\n    debug('engine::run started')\n    this.status = RUNNING\n\n    const almanac = runOptions.almanac || new Almanac({\n      allowUndefinedFacts: this.allowUndefinedFacts,\n      pathResolver: this.pathResolver\n    })\n\n    this.facts.forEach(fact => {\n      almanac.addFact(fact)\n    })\n    for (const factId in runtimeFacts) {\n      let fact\n      if (runtimeFacts[factId] instanceof Fact) {\n        fact = runtimeFacts[factId]\n      } else {\n        fact = new Fact(factId, runtimeFacts[factId])\n      }\n\n      almanac.addFact(fact)\n      debug('engine::run initialized runtime fact', { id: fact.id, value: fact.value, type: typeof fact.value })\n    }\n    const orderedSets = this.prioritizeRules()\n    let cursor = Promise.resolve()\n    // for each rule set, evaluate in parallel,\n    // before proceeding to the next priority set.\n    return new Promise((resolve, reject) => {\n      orderedSets.map((set) => {\n        cursor = cursor.then(() => {\n          return this.evaluateRules(set, almanac)\n        }).catch(reject)\n        return cursor\n      })\n      cursor.then(() => {\n        this.status = FINISHED\n        debug('engine::run completed')\n        const ruleResults = almanac.getResults()\n        const { results, failureResults } = ruleResults.reduce((hash, ruleResult) => {\n          const group = ruleResult.result ? 'results' : 'failureResults'\n          hash[group].push(ruleResult)\n          return hash\n        }, { results: [], failureResults: [] })\n\n        resolve({\n          almanac,\n          results,\n          failureResults,\n          events: almanac.getEvents('success'),\n          failureEvents: almanac.getEvents('failure')\n        })\n      }).catch(reject)\n    })\n  }\n}\n\nexport default Engine\n", "import Engine from './engine'\nimport Fact from './fact'\nimport Rule from './rule'\nimport Operator from './operator'\nimport Almanac from './almanac'\nimport OperatorDecorator from './operator-decorator'\n\nexport { Fact, Rule, Operator, Engine, Almanac, OperatorDecorator }\nexport default function (rules, options) {\n  return new Engine(rules, options)\n}\n", "'use strict'\n\nmodule.exports = require('./custom-rules-engine')\n"],
  "mappings": "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",
  "names": ["hash", "string", "index", "hashA", "hashB", "charCode", "sortByKey", "first", "second", "sortBySelf", "sort", "array", "fn", "subIndex", "value", "namespaceComplexValue", "classType", "HASHABLE_TYPES", "SEPARATOR", "CLASSES", "getUnsupportedHash", "cached", "NON_ENUMERABLE_CLASS_CACHE", "toCache", "refId", "stringifyComplexType", "state", "RECURSIVE_CLASSES", "stringifyRecursiveAsJson", "stringifyDocumentFragment", "element", "XML_ELEMENT_REGEXP", "NON_ENUMERABLE_CLASSES", "PRIMITIVE_WRAPPER_CLASSES", "stringifyObject", "ARRAY_LIKE_CLASSES", "stringifyArray", "stringifyMap", "stringifySet", "TYPED_ARRAY_CLASSES", "stringifyArrayBuffer", "result", "stringify", "stringifyArrayBufferModern", "buffer", "stringifyArrayBufferFallback", "stringifyArrayBufferNone", "fragment", "children", "innerHTML", "map", "key", "properties", "length", "set", "type", "toString", "hashIt", "init_esm", "__esmMin", "Fact", "fact_default", "init_fact", "__esmMin", "init_esm", "_Fact", "id", "valueOrMethod", "options", "defaultOptions", "params", "almanac", "obj", "hashIt", "cacheProperties", "createDebug", "ex", "debug_default", "init_debug", "__esmMin", "Condition", "init_condition", "__esmMin", "init_debug", "_Condition", "properties", "booleanOperator", "subConditions", "subConditionsIsArray", "stringify", "props", "oper", "c", "almanac", "operatorMap", "op", "rightHandSideValue", "leftHandSideValue", "result", "debug_default", "condition", "require_clone", "__commonJSMin", "exports", "module", "clone", "_instanceof", "obj", "type", "nativeMap", "_", "nativeSet", "nativePromise", "parent", "circular", "depth", "prototype", "includeNonEnumerable", "allParents", "allChildren", "useBuffer", "_clone", "child", "proto", "resolve", "reject", "value", "err", "__getRegExpFlags", "index", "key", "keyChild", "valueChild", "entryChild", "i", "attrs", "symbols", "symbol", "descriptor", "allPropertyNames", "propertyName", "c", "__objToStr", "o", "__isDate", "__isArray", "__isRegExp", "re", "flags", "import_clone", "RuleResult", "init_rule_result", "__esmMin", "conditions", "event", "priority", "name", "deepClone", "result", "almanac", "updates", "key", "val", "stringify", "props", "require_eventemitter2", "__commonJSMin", "exports", "module", "undefined", "hasOwnProperty", "isArray", "obj", "defaultMaxListeners", "nextTickSupported", "symbolsSupported", "reflectSupported", "setImmediateSupported", "_setImmediate", "ownKeys", "arr", "init", "configure", "conf", "logPossibleMemoryLeak", "count", "eventName", "errorMsg", "e", "toArray", "a", "b", "c", "n", "toObject", "keys", "values", "key", "len", "valuesCount", "i", "TargetObserver", "emitter", "target", "options", "on", "off", "_observers", "event", "localEvent", "reducer", "observer", "listeners", "handler", "args", "eventObj", "result", "_event", "events", "clearRefs", "index", "findTargetIndex", "resolveOptions", "schema", "reducers", "allowUnknown", "computedOptions", "length", "option", "value", "reject", "reason", "constructorReducer", "makeTypeReducer", "types", "message", "firstType", "secondType", "v", "kind", "functionReducer", "objectFunctionReducer", "makeCancelablePromise", "Promise", "executor", "isCancelable", "callbacks", "timer", "subscriptionClosed", "promise", "resolve", "onCancel", "cleanup", "_resolve", "_reject", "err", "cb", "observers", "searchListenerTree", "handlers", "type", "tree", "typeLength", "ns", "l", "j", "delimiter", "dl", "branch", "xTree", "xxTree", "isolatedBranch", "endReached", "currentType", "nextType", "branches", "_listeners", "growListenerTree", "listener", "prepend", "name", "collectTreeEvents", "root", "asArray", "branchName", "path", "hasListeners", "isArrayPath", "recursivelyGarbageCollect", "flag", "Listener", "setupListener", "promisify", "async", "nextTick", "objectify", "_listener", "_origin", "context", "EventEmitter", "listen", "isSingleReducer", "matched", "fn", "ttl", "self", "wildcard", "containsSymbol", "al", "promises", "returnValue", "temp", "leafs", "iLeaf", "leaf", "position", "fns", "_events", "allListeners", "listenerTree", "nsAsArray", "_all", "filter", "once", "_Promise", "eventListener", "errorListener", "prototype", "_global", "import_clone", "import_eventemitter2", "Rule", "rule_default", "init_rule", "__esmMin", "init_condition", "init_rule_result", "init_debug", "EventEmitter", "options", "priority", "event", "name", "conditions", "Condition", "engine", "stringify", "props", "factSets", "sets", "condition", "fact", "a", "b", "almanac", "ruleResult", "RuleResult", "evaluateCondition", "realize", "subConditions", "comparisonPromise", "all", "any", "not", "comparisonValue", "passes", "evaluationResult", "evaluateConditions", "method", "conditionResults", "debug_default", "result", "prioritizeAndRun", "operator", "orderedSets", "cursor", "i", "set", "setResult", "conditionReference", "deepClone", "processResult", "processEvent", "UndefinedFactError", "init_errors", "__esmMin", "props", "push", "arr", "item", "unshift", "JSONPath", "opts", "expr", "obj", "callback", "otherTypeCallback", "e", "optObj", "args", "ret", "NewError", "import_vm", "Hooks", "Plugins", "Jsep", "hooks", "jsep", "stdClassProps", "CONDITIONAL_EXP", "ternary", "FSLASH_CODE", "BSLASH_CODE", "index", "PLUS_CODE", "MINUS_CODE", "plugin", "SafeEval", "SafeScript", "init_index_node_esm", "__esmMin", "name", "first", "env", "plugins", "_Jsep", "op_name", "precedence", "isRightAssociative", "char", "literal_name", "literal_value", "k", "ch", "op_val", "message", "error", "node", "nodes", "untilICode", "ch_i", "to_check", "tc_len", "biop", "prec", "stack", "biop_info", "left", "right", "i", "cur_biop", "comparePrev", "prev", "argument", "optional", "number", "chCode", "str", "startIndex", "quote", "closed", "start", "termination", "separator_count", "arg", "prop", "m", "test", "consequent", "alternate", "newTest", "patternIndex", "inCharSet", "pattern", "flags", "code", "value", "updateNodeTypes", "op", "c", "updateBinariesToAssignments", "val", "ast", "subs", "a", "b", "last", "result", "el", "func", "id", "context", "keyMap", "__spreadValues", "json", "currParent", "currParentProperty", "flatten", "wrap", "exprList", "ea", "rslt", "valOrPath", "resultType", "path", "fullRetObj", "type", "preferredOutput", "parent", "parentPropName", "hasArrExpr", "literalPriority", "retObj", "loc", "x", "addRet", "elems", "t", "safeLoc", "nested", "npath", "nvalue", "addType", "valueType", "locProp", "parts", "part", "rett", "tmp", "tl", "tt", "f", "n", "len", "step", "end", "_v", "_vname", "containsPath", "scriptCacheKey", "script", "CurrEval", "pathArr", "p", "pointer", "cache", "subx", "$0", "$1", "ups", "exp", "match", "vm", "defaultPathResolver", "value", "path", "JSONPath", "Almanac", "init_almanac", "__esmMin", "init_fact", "init_errors", "init_debug", "init_index_node_esm", "options", "event", "outcome", "ruleResult", "factId", "fact", "params", "cacheKey", "factValue", "id", "valueOrMethod", "fact_default", "debug_default", "factValuePromise", "UndefinedFactError", "cacheVal", "pathValue", "Operator", "init_operator", "__esmMin", "name", "cb", "factValueValidator", "factValue", "jsonValue", "numberValidator", "factValue", "Operators", "engine_default_operators_default", "init_engine_default_operators", "__esmMin", "init_operator", "Operator", "a", "b", "OperatorDecorator", "init_operator_decorator", "__esmMin", "init_operator", "name", "cb", "factValueValidator", "operator", "next", "Operator", "factValue", "jsonValue", "OperatorDecorators", "engine_default_operator_decorators_default", "init_engine_default_operator_decorators", "__esmMin", "init_operator_decorator", "OperatorDecorator", "factValue", "jsonValue", "next", "fv", "jv", "OperatorMap", "init_operator_map", "__esmMin", "init_operator", "init_operator_decorator", "init_debug", "operatorOrName", "cb", "operator", "Operator", "debug_default", "operatorName", "suffix", "operatorNames", "i", "decoratorOrName", "decorator", "OperatorDecorator", "decoratorName", "prefix", "name", "decorators", "opName", "firstDecoratorIndex", "op", "import_eventemitter2", "READY", "RUNNING", "FINISHED", "Engine", "engine_default", "init_engine", "__esmMin", "init_fact", "init_rule", "init_almanac", "init_engine_default_operators", "init_engine_default_operator_decorators", "init_debug", "init_condition", "init_operator_map", "EventEmitter", "rules", "options", "OperatorMap", "r", "engine_default_operators_default", "o", "engine_default_operator_decorators_default", "d", "properties", "rule", "rule_default", "ruleIndex", "ruleInEngine", "ruleRemoved", "index", "filteredRules", "name", "conditions", "Condition", "operatorOrName", "cb", "decoratorOrName", "id", "valueOrMethod", "factId", "fact", "fact_default", "debug_default", "factOrId", "ruleSets", "sets", "priority", "a", "b", "ruleArray", "almanac", "ruleResult", "runtimeFacts", "runOptions", "Almanac", "orderedSets", "cursor", "resolve", "reject", "set", "ruleResults", "results", "failureResults", "hash", "group", "custom_rules_engine_exports", "__export", "Almanac", "engine_default", "fact_default", "Operator", "OperatorDecorator", "rule_default", "custom_rules_engine_default", "rules", "options", "init_custom_rules_engine", "__esmMin", "init_engine", "init_fact", "init_rule", "init_operator", "init_almanac", "init_operator_decorator"]
}
